name: Build tModLoader

# Controls when the action will run. 
on:
  push:
    branches: [1.4]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build script
        shell: bash
        run: |
          echo Downloading Terraraia Server zip
          curl -s -L https://terraria.org/system/dedicated_servers/archives/000/000/042/original/terraria-server-1412.zip -o terrariaserver.zip
          unzip -q terrariaserver.zip
          echo Extracting Setup Secret Assets
          gpg --quiet --batch --yes --decrypt --passphrase="$SETUP_ASSETS_PASSPHRASE" --output ./1412/Windows/Terraria.exe ./setup/SecretAssets/SetupAsset1.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$SETUP_ASSETS_PASSPHRASE" --output ./1412/Windows/SteelSeriesEngineWrapper.dll ./setup/SecretAssets/SetupAsset2.gpg
          echo ls -l is:
          ls -l
          echo Installing XNA
          curl -s -L https://github.com/JavidPack/tModLoaderPublishIntegration/raw/master/xnafx40_redist.msi -O
          msiexec //i xnafx40_redist.msi //quiet
          echo XNA Installed
          echo Running setup.bat
          ./setup.bat auto
          echo setupcommandline Done
          echo pwd is: ${PWD}
          echo ls -l is:
          ls -l
          cd src
          echo pwd is: ${PWD}
          echo ls -l is:
          ls -l
          cd tModLoader
          echo pwd is: ${PWD}
          echo ls -l is:
          ls -l
          cd Terraria
          echo Building WindowsDebug [1/2]
          dotnet build -c WindowsDebug --nologo -v q /clp:ErrorsOnly
          echo Building WindowsServerDebug [2/2]
          dotnet build -c WindowsServerDebug --nologo -v q /clp:ErrorsOnly
          cd ../../..
          mkdir -p artifacts/Windows
          mv ./src/tModLoader/Terraria/bin/WindowsDebug/net45/Terraria.exe  ./artifacts/Windows/tModLoaderDebug.exe
          mv ./src/tModLoader/Terraria/bin/WindowsDebug/net45/tModLoaderDebug.pdb  ./artifacts/Windows/tModLoaderDebug.pdb
          mv ./src/tModLoader/Terraria/bin/WindowsServerDebug/net45/Terraria.exe  ./artifacts/Windows/tModLoaderServerDebug.exe
          mv ./src/tModLoader/Terraria/bin/WindowsServerDebug/net45/tModLoaderServerDebug.pdb  ./artifacts/Windows/tModLoaderServerDebug.pdb
          mv ./1412/Windows/ReLogic.Native.dll ./artifacts/Windows/ReLogic.Native.dll
          mv ./solutions/ReleaseExtras/Content/ ./artifacts/Windows/
          mv ./1412/Windows/ModCompile/ ./artifacts/Windows/
          mv ./src/tModLoader/Terraria/bin/MacRelease/net45/Terraria.exe ./artifacts/Windows/ModCompile/tModLoader.FNA.exe
          mv ./src/tModLoader/Terraria/bin/MacRelease/net45/FNA.dll ./artifacts/Windows/ModCompile/FNA.dll
        env:
          SETUP_ASSETS_PASSPHRASE: ${{ secrets.SETUP_ASSETS_PASSPHRASE }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: Windows Debug Build
          path: |
            ./artifacts/Windows/
        
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_BUILDBOT }}
          description: |
            Click [here](https://github.com/tModLoader/tModLoader/actions/runs/${{ github.run_id }}) to view.
