--- src/merged\Terraria\WorldGen.cs
+++ src/Terraria\Terraria\WorldGen.cs
@@ -6822,7 +_,7 @@
 				progress.Message = Lang.gen[21].Value;
 				for (int k = 0; k < WorldGen.numMCaves; k++)
 				{
-					int i2 = WorldGen.mCaveX[k];
+					i2 = WorldGen.mCaveX[k];
 					int j2 = WorldGen.mCaveY[k];
 					WorldGen.CaveOpenater(i2, j2);
 					WorldGen.Cavinator(i2, j2, WorldGen.genRand.Next(40, 50));
@@ -9365,39 +_,32 @@
 				{
 					int num5;
 					int num6;
+					bool flag2;
+					int maxValue;
 					switch (k)
 					{
 					case 0:
-					{
-						IL_42:
+					default:
 						num5 = 5;
 						num6 = num4;
-						bool flag2 = false;
-						int maxValue = num3;
-						goto IL_7C;
-					}
+						flag2 = false;
+						maxValue = num3;
+						break;
 					case 1:
-					{
 						num5 = num2;
 						num6 = Main.maxTilesX - num2;
-						bool flag2 = true;
-						int maxValue = num;
-						goto IL_7C;
-					}
+						flag2 = true;
+						maxValue = num;
+						break;
 					case 2:
-					{
 						num5 = Main.maxTilesX - num4;
 						num6 = Main.maxTilesX - 5;
-						bool flag2 = false;
-						int maxValue = num3;
-						goto IL_7C;
-					}
-					}
-					goto IL_42;
-					IL_7C:
+						flag2 = false;
+						maxValue = num3;
+						break;
+					}
 					for (int l = num5; l < num6; l++)
 					{
-						int maxValue;
 						if (WorldGen.genRand.Next(maxValue) == 0)
 						{
 							int num7 = 0;
@@ -9409,7 +_,6 @@
 									Tile tile2 = Main.tile[l, num7 - 1];
 									if (!tile2.active() && tile2.wall == 0)
 									{
-										bool flag2;
 										if (flag2)
 										{
 											WorldGen.PlantCactus(l, num7);
@@ -10841,7 +_,7 @@
 						if (flag)
 						{
 							short num6 = (short)Math.Sign(num3);
-							num4 += num6 * 2;
+							num4 += (short)(num6 * 2);
 						}
 					}
 					tile.active(true);
@@ -13945,7 +_,7 @@
 			Main.tile[x - 1, y - 1].frameY = 0;
 			Main.tile[x, y - 1].active(true);
 			Main.tile[x, y - 1].type = 31;
-			Main.tile[x, y - 1].frameX = 18 + num;
+			Main.tile[x, y - 1].frameX = (short)(18 + num);
 			Main.tile[x, y - 1].frameY = 0;
 			Main.tile[x - 1, y].active(true);
 			Main.tile[x - 1, y].type = 31;
@@ -13953,7 +_,7 @@
 			Main.tile[x - 1, y].frameY = 18;
 			Main.tile[x, y].active(true);
 			Main.tile[x, y].type = 31;
-			Main.tile[x, y].frameX = 18 + num;
+			Main.tile[x, y].frameX = (short)(18 + num);
 			Main.tile[x, y].frameY = 18;
 		}
 
@@ -14427,33 +_,25 @@
 					int style16 = 32;
 					int style17 = 32;
 					int num37;
+					int num38;
 					switch (num36)
 					{
 					case 0:
-					{
-						IL_F95:
+					default:
 						num37 = 1;
-						int num38 = 3;
-						goto IL_FAB;
-					}
+						num38 = 3;
+						break;
 					case 1:
-					{
 						num37 = 3;
-						int num38 = 3;
-						goto IL_FAB;
-					}
+						num38 = 3;
+						break;
 					case 2:
-					{
 						num37 = 1;
-						int num38 = 2;
-						goto IL_FAB;
-					}
-					}
-					goto IL_F95;
-					IL_FAB:
+						num38 = 2;
+						break;
+					}
 					for (int num39 = num34 - 1; num39 <= num34 + num37; num39++)
 					{
-						int num38;
 						for (int num40 = num35; num40 <= num35 + num38; num40++)
 						{
 							Tile tile = Main.tile[num34, num35];
@@ -20689,7 +_,7 @@
 			Main.tile[num5 + 1, num4].active(true);
 			Main.tile[num5 + 1, num4].type = 11;
 			Main.tile[num5 + 1, num4].frameY = (short)num7;
-			Main.tile[num5 + 1, num4].frameX = num + 18;
+			Main.tile[num5 + 1, num4].frameX = (short)(num + 18);
 			Main.tile[num5 + 1, num4].color(color);
 			if (Main.tile[num5, num4 + 1] == null)
 			{
@@ -20707,7 +_,7 @@
 			Main.tile[num5 + 1, num4 + 1].active(true);
 			Main.tile[num5 + 1, num4 + 1].type = 11;
 			Main.tile[num5 + 1, num4 + 1].frameY = (short)(num7 + 18);
-			Main.tile[num5 + 1, num4 + 1].frameX = num + 18;
+			Main.tile[num5 + 1, num4 + 1].frameX = (short)(num + 18);
 			Main.tile[num5 + 1, num4 + 1].color(color2);
 			if (Main.tile[num5, num4 + 2] == null)
 			{
@@ -20725,7 +_,7 @@
 			Main.tile[num5 + 1, num4 + 2].active(true);
 			Main.tile[num5 + 1, num4 + 2].type = 11;
 			Main.tile[num5 + 1, num4 + 2].frameY = (short)(num7 + 36);
-			Main.tile[num5 + 1, num4 + 2].frameX = num + 18;
+			Main.tile[num5 + 1, num4 + 2].frameX = (short)(num + 18);
 			Main.tile[num5 + 1, num4 + 2].color(color3);
 			for (int m = num5 - 1; m <= num5 + 2; m++)
 			{
@@ -22048,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -2);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -2);
 				}
 				if ((style & 2) == 2)
 				{
@@ -22057,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -3);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -3);
 				}
 				if ((style & 4) == 4)
 				{
@@ -22066,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -5);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -5);
 				}
 			}
 			if (obj == 1)
@@ -22078,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -9);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -9);
 				}
 				if ((style & 2) == 2)
 				{
@@ -22087,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -17);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -17);
 				}
 				if ((style & 4) == 4)
 				{
@@ -22096,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -33);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -33);
 				}
 			}
 			if (obj == 2)
@@ -22108,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -65);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -65);
 				}
 				if ((style & 2) == 2)
 				{
@@ -22117,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -129);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -129);
 				}
 				if ((style & 4) == 4)
 				{
@@ -22126,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -257);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -257);
 				}
 				if ((style & 8) == 8)
 				{
@@ -22135,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -513);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -513);
 				}
 			}
 			if (obj == 3)
@@ -22147,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -1025);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -1025);
 				}
 				if ((style & 2) == 2)
 				{
@@ -22156,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -2049);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -2049);
 				}
 				if ((style & 4) == 4)
 				{
@@ -22165,7 +_,7 @@
 				}
 				else
 				{
-					Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -4097);
+					Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -4097);
 				}
 				if ((style & 8) == 8)
 				{
@@ -22173,7 +_,7 @@
 					expr_443.frameY |= 8192;
 					return;
 				}
-				Main.tile[num, num2].frameY = (Main.tile[num, num2].frameY & -8193);
+				Main.tile[num, num2].frameY = (short)(Main.tile[num, num2].frameY & -8193);
 			}
 		}
 
@@ -23094,7 +_,11 @@
 
 		public static void paintEffect(int x, int y, byte color, byte oldColor)
 		{
-			int color2 = (int)(color ?? oldColor);
+			int color2 = color;
+			if (color == 0)
+			{
+				color2 = oldColor;
+			}
 			Color newColor = WorldGen.paintColor(color2);
 			for (int i = 0; i < 10; i++)
 			{
@@ -24961,7 +_,7 @@
 				Main.tile[x, y - 1].frameX = frameX;
 				Main.tile[x, y - 1].type = type;
 				Main.tile[x, y].active(true);
-				Main.tile[x, y].frameY = num + 18;
+				Main.tile[x, y].frameY = (short)(num + 18);
 				Main.tile[x, y].frameX = frameX;
 				Main.tile[x, y].type = type;
 			}
@@ -24986,7 +_,7 @@
 				Main.tile[x, y].frameX = frameX;
 				Main.tile[x, y].type = type;
 				Main.tile[x, y + 1].active(true);
-				Main.tile[x, y + 1].frameY = num + 18;
+				Main.tile[x, y + 1].frameY = (short)(num + 18);
 				Main.tile[x, y + 1].frameX = frameX;
 				Main.tile[x, y + 1].type = type;
 			}
@@ -25220,7 +_,7 @@
 					Main.tile[i, j].type = type;
 					Main.tile[i + 1, j].active(true);
 					Main.tile[i + 1, j].frameY = frameY;
-					Main.tile[i + 1, j].frameX = num + 18;
+					Main.tile[i + 1, j].frameX = (short)(num + 18);
 					Main.tile[i + 1, j].type = type;
 					return true;
 				}
@@ -25932,15 +_,15 @@
 					Main.tile[X2 - 1, num - 1].type = type;
 					Main.tile[X2, num - 1].active(true);
 					Main.tile[X2, num - 1].frameY = num2;
-					Main.tile[X2, num - 1].frameX = 18 + num3;
+					Main.tile[X2, num - 1].frameX = (short)(18 + num3);
 					Main.tile[X2, num - 1].type = type;
 					Main.tile[X2 - 1, num].active(true);
-					Main.tile[X2 - 1, num].frameY = num2 + 18;
+					Main.tile[X2 - 1, num].frameY = (short)(num2 + 18);
 					Main.tile[X2 - 1, num].frameX = num3;
 					Main.tile[X2 - 1, num].type = type;
 					Main.tile[X2, num].active(true);
-					Main.tile[X2, num].frameY = num2 + 18;
-					Main.tile[X2, num].frameX = 18 + num3;
+					Main.tile[X2, num].frameY = (short)(num2 + 18);
+					Main.tile[X2, num].frameX = (short)(18 + num3);
 					Main.tile[X2, num].type = type;
 					return;
 				}
@@ -25983,11 +_,11 @@
 					Main.tile[X2 - 1, Y2 - 1].type = type;
 					Main.tile[X2, Y2 - 1].active(true);
 					Main.tile[X2, Y2 - 1].frameY = 0;
-					Main.tile[X2, Y2 - 1].frameX = num4 + 18;
+					Main.tile[X2, Y2 - 1].frameX = (short)(num4 + 18);
 					Main.tile[X2, Y2 - 1].type = type;
 					Main.tile[X2 + 1, Y2 - 1].active(true);
 					Main.tile[X2 + 1, Y2 - 1].frameY = 0;
-					Main.tile[X2 + 1, Y2 - 1].frameX = num4 + 36;
+					Main.tile[X2 + 1, Y2 - 1].frameX = (short)(num4 + 36);
 					Main.tile[X2 + 1, Y2 - 1].type = type;
 					Main.tile[X2 - 1, Y2].active(true);
 					Main.tile[X2 - 1, Y2].frameY = 18;
@@ -25995,11 +_,11 @@
 					Main.tile[X2 - 1, Y2].type = type;
 					Main.tile[X2, Y2].active(true);
 					Main.tile[X2, Y2].frameY = 18;
-					Main.tile[X2, Y2].frameX = num4 + 18;
+					Main.tile[X2, Y2].frameX = (short)(num4 + 18);
 					Main.tile[X2, Y2].type = type;
 					Main.tile[X2 + 1, Y2].active(true);
 					Main.tile[X2 + 1, Y2].frameY = 18;
-					Main.tile[X2 + 1, Y2].frameX = num4 + 36;
+					Main.tile[X2 + 1, Y2].frameX = (short)(num4 + 36);
 					Main.tile[X2 + 1, Y2].type = type;
 				}
 			}
@@ -28155,15 +_,15 @@
 				Main.tile[x - 1, y - 1].type = type;
 				Main.tile[x, y - 1].active(true);
 				Main.tile[x, y - 1].frameY = (short)num2;
-				Main.tile[x, y - 1].frameX = 18 + num;
+				Main.tile[x, y - 1].frameX = (short)(18 + num);
 				Main.tile[x, y - 1].type = type;
 				Main.tile[x + 1, y - 1].active(true);
 				Main.tile[x + 1, y - 1].frameY = (short)num2;
-				Main.tile[x + 1, y - 1].frameX = 36 + num;
+				Main.tile[x + 1, y - 1].frameX = (short)(36 + num);
 				Main.tile[x + 1, y - 1].type = type;
 				Main.tile[x + 2, y - 1].active(true);
 				Main.tile[x + 2, y - 1].frameY = (short)num2;
-				Main.tile[x + 2, y - 1].frameX = 54 + num;
+				Main.tile[x + 2, y - 1].frameX = (short)(54 + num);
 				Main.tile[x + 2, y - 1].type = type;
 				Main.tile[x - 1, y].active(true);
 				Main.tile[x - 1, y].frameY = (short)(num2 + 18);
@@ -28171,15 +_,15 @@
 				Main.tile[x - 1, y].type = type;
 				Main.tile[x, y].active(true);
 				Main.tile[x, y].frameY = (short)(num2 + 18);
-				Main.tile[x, y].frameX = 18 + num;
+				Main.tile[x, y].frameX = (short)(18 + num);
 				Main.tile[x, y].type = type;
 				Main.tile[x + 1, y].active(true);
 				Main.tile[x + 1, y].frameY = (short)(num2 + 18);
-				Main.tile[x + 1, y].frameX = 36 + num;
+				Main.tile[x + 1, y].frameX = (short)(36 + num);
 				Main.tile[x + 1, y].type = type;
 				Main.tile[x + 2, y].active(true);
 				Main.tile[x + 2, y].frameY = (short)(num2 + 18);
-				Main.tile[x + 2, y].frameX = 54 + num;
+				Main.tile[x + 2, y].frameX = (short)(54 + num);
 				Main.tile[x + 2, y].type = type;
 			}
 		}
@@ -29189,8 +_,8 @@
 
 		public static bool ShiftTallGate(int x, int y, bool closing)
 		{
-			ushort type = closing ? 388 : 389;
-			ushort num = closing ? 389 : 388;
+			ushort type = closing ? (ushort)388 : (ushort)389;
+			ushort num = closing ? (ushort)389 : (ushort)388;
 			Tile tileSafely = Framing.GetTileSafely(x, y);
 			if (tileSafely.type != num)
 			{
@@ -29528,11 +_,11 @@
 				Main.tile[x - 1, y].type = type;
 				Main.tile[x, y].active(true);
 				Main.tile[x, y].frameY = 0;
-				Main.tile[x, y].frameX = num + 18;
+				Main.tile[x, y].frameX = (short)(num + 18);
 				Main.tile[x, y].type = type;
 				Main.tile[x + 1, y].active(true);
 				Main.tile[x + 1, y].frameY = 0;
-				Main.tile[x + 1, y].frameX = num + 36;
+				Main.tile[x + 1, y].frameX = (short)(num + 36);
 				Main.tile[x + 1, y].type = type;
 			}
 		}
@@ -29610,11 +_,11 @@
 					Main.tile[x - 1, y].type = type;
 					Main.tile[x, y].active(true);
 					Main.tile[x, y].frameY = 0;
-					Main.tile[x, y].frameX = num3 + 18;
+					Main.tile[x, y].frameX = (short)(num3 + 18);
 					Main.tile[x, y].type = type;
 					Main.tile[x + 1, y].active(true);
 					Main.tile[x + 1, y].frameY = 0;
-					Main.tile[x + 1, y].frameX = num3 + 36;
+					Main.tile[x + 1, y].frameX = (short)(num3 + 36);
 					Main.tile[x + 1, y].type = type;
 					return;
 				}
@@ -29624,11 +_,11 @@
 				Main.tile[x - 1, y - 1].type = type;
 				Main.tile[x, y - 1].active(true);
 				Main.tile[x, y - 1].frameY = 0;
-				Main.tile[x, y - 1].frameX = num3 + 18;
+				Main.tile[x, y - 1].frameX = (short)(num3 + 18);
 				Main.tile[x, y - 1].type = type;
 				Main.tile[x + 1, y - 1].active(true);
 				Main.tile[x + 1, y - 1].frameY = 0;
-				Main.tile[x + 1, y - 1].frameX = num3 + 36;
+				Main.tile[x + 1, y - 1].frameX = (short)(num3 + 36);
 				Main.tile[x + 1, y - 1].type = type;
 				Main.tile[x - 1, y].active(true);
 				Main.tile[x - 1, y].frameY = 18;
@@ -29636,11 +_,11 @@
 				Main.tile[x - 1, y].type = type;
 				Main.tile[x, y].active(true);
 				Main.tile[x, y].frameY = 18;
-				Main.tile[x, y].frameX = num3 + 18;
+				Main.tile[x, y].frameX = (short)(num3 + 18);
 				Main.tile[x, y].type = type;
 				Main.tile[x + 1, y].active(true);
 				Main.tile[x + 1, y].frameY = 18;
-				Main.tile[x + 1, y].frameX = num3 + 36;
+				Main.tile[x + 1, y].frameX = (short)(num3 + 36);
 				Main.tile[x + 1, y].type = type;
 			}
 		}
@@ -29693,15 +_,15 @@
 				Main.tile[x - 1, y - 1].type = type;
 				Main.tile[x, y - 1].active(true);
 				Main.tile[x, y - 1].frameY = num;
-				Main.tile[x, y - 1].frameX = num2 + 18;
+				Main.tile[x, y - 1].frameX = (short)(num2 + 18);
 				Main.tile[x, y - 1].type = type;
 				Main.tile[x - 1, y].active(true);
-				Main.tile[x - 1, y].frameY = num + 18;
+				Main.tile[x - 1, y].frameY = (short)(num + 18);
 				Main.tile[x - 1, y].frameX = num2;
 				Main.tile[x - 1, y].type = type;
 				Main.tile[x, y].active(true);
-				Main.tile[x, y].frameY = num + 18;
-				Main.tile[x, y].frameX = num2 + 18;
+				Main.tile[x, y].frameY = (short)(num + 18);
+				Main.tile[x, y].frameX = (short)(num2 + 18);
 				Main.tile[x, y].type = type;
 			}
 		}
@@ -33487,11 +_,11 @@
 			Main.tile[x - 1, y - 1].type = type;
 			Main.tile[x, y - 1].active(true);
 			Main.tile[x, y - 1].frameY = 0;
-			Main.tile[x, y - 1].frameX = num + 18;
+			Main.tile[x, y - 1].frameX = (short)(num + 18);
 			Main.tile[x, y - 1].type = type;
 			Main.tile[x + 1, y - 1].active(true);
 			Main.tile[x + 1, y - 1].frameY = 0;
-			Main.tile[x + 1, y - 1].frameX = num + 36;
+			Main.tile[x + 1, y - 1].frameX = (short)(num + 36);
 			Main.tile[x + 1, y - 1].type = type;
 			Main.tile[x - 1, y].active(true);
 			Main.tile[x - 1, y].frameY = 18;
@@ -33499,11 +_,11 @@
 			Main.tile[x - 1, y].type = type;
 			Main.tile[x, y].active(true);
 			Main.tile[x, y].frameY = 18;
-			Main.tile[x, y].frameX = num + 18;
+			Main.tile[x, y].frameX = (short)(num + 18);
 			Main.tile[x, y].type = type;
 			Main.tile[x + 1, y].active(true);
 			Main.tile[x + 1, y].frameY = 18;
-			Main.tile[x + 1, y].frameX = num + 36;
+			Main.tile[x + 1, y].frameX = (short)(num + 36);
 			Main.tile[x + 1, y].type = type;
 		}
 
@@ -48180,11 +_,11 @@
 								}
 								else if ((num4 >= 0 && Main.tileSolid[num4] && !Main.tileNoAttach[num4]) || num4 == 124 || (num4 == 5 && num8 == 5 && num6 == 5))
 								{
-									tile.frameX = 22 + num2;
+									tile.frameX = (short)(22 + num2);
 								}
 								else if ((num5 >= 0 && Main.tileSolid[num5] && !Main.tileNoAttach[num5]) || num5 == 124 || (num5 == 5 && num9 == 5 && num7 == 5))
 								{
-									tile.frameX = 44 + num2;
+									tile.frameX = (short)(44 + num2);
 								}
 								else if (tile.wall > 0)
 								{
@@ -48474,21 +_,21 @@
 								{
 									if (tile.frameY < 108 || tile.frameY > 54)
 									{
-										tile.frameY = 108 + num33;
+										tile.frameY = (short)(108 + num33);
 									}
 								}
 								else if (num32 >= 0 && Main.tileSolid[num32] && !Main.tileSolidTop[num32])
 								{
 									if (tile.frameY < 162 || tile.frameY > 198)
 									{
-										tile.frameY = 162 + num33;
+										tile.frameY = (short)(162 + num33);
 									}
 								}
 								else if (num30 >= 0 && Main.tileSolid[num30] && !Main.tileSolidTop[num30])
 								{
 									if (tile.frameY < 54 || tile.frameY > 90)
 									{
-										tile.frameY = 54 + num33;
+										tile.frameY = (short)(54 + num33);
 									}
 								}
 								else
@@ -48550,7 +_,7 @@
 									}
 									if (tile.frameY < 54 || tile.frameY > 90)
 									{
-										tile.frameY = 54 + num38;
+										tile.frameY = (short)(54 + num38);
 									}
 								}
 								else if (num36 >= 0 && Main.tileMoss[num36])
@@ -48565,7 +_,7 @@
 									}
 									if (tile.frameY < 108 || tile.frameY > 54)
 									{
-										tile.frameY = 108 + num38;
+										tile.frameY = (short)(108 + num38);
 									}
 								}
 								else if (num37 >= 0 && Main.tileMoss[num37])
@@ -48580,7 +_,7 @@
 									}
 									if (tile.frameY < 162 || tile.frameY > 198)
 									{
-										tile.frameY = 162 + num38;
+										tile.frameY = (short)(162 + num38);
 									}
 								}
 								else

