--- src/Terraria\Terraria.UI\UserInterface.cs
+++ src/tModLoader\Terraria.UI\UserInterface.cs
@@ -16,10 +_,26 @@
 		private List<UIState> _history = new List<UIState>();
 		public Vector2 MousePosition;
 		private bool _wasMouseDown;
+		private bool _wasMouseRightDown;
+		private bool _wasMouseMiddleDown;
+		private bool _wasMouseXButton1Down;
+		private bool _wasMouseXButton2Down;
 		private UIElement _lastElementHover;
 		private UIElement _lastElementDown;
+		private UIElement _lastElementRightDown;
+		private UIElement _lastElementMiddleDown;
+		private UIElement _lastElementXButton1Down;
+		private UIElement _lastElementXButton2Down;
 		private UIElement _lastElementClicked;
+		private UIElement _lastElementRightClicked;
+		private UIElement _lastElementMiddleClicked;
+		private UIElement _lastElementXButton1Clicked;
+		private UIElement _lastElementXButton2Clicked;
 		private double _lastMouseDownTime;
+		private double _lastMouseRightDownTime;
+		private double _lastMouseMiddleDownTime;
+		private double _lastMouseXButton1DownTime;
+		private double _lastMouseXButton2DownTime;
 		private double _clickDisabledTimeRemaining;
 		public bool IsVisible;
 		private UIState _currentState;
@@ -36,7 +_,9 @@
 		{
 			this._lastElementHover = null;
 			this._lastElementDown = null;
+			this._lastElementRightDown = null;
 			this._lastElementClicked = null;
+			this._lastElementRightClicked = null;
 		}
 
 		public UserInterface()
@@ -60,6 +_,10 @@
 #if CLIENT
 			this.MousePosition = new Vector2((float)Main.mouseX, (float)Main.mouseY);
 			this._wasMouseDown = Main.mouseLeft;
+			this._wasMouseRightDown = Main.mouseRight;
+			this._wasMouseMiddleDown = Main.mouseMiddle;
+			this._wasMouseXButton1Down = Main.mouseXButton1;
+			this._wasMouseXButton2Down = Main.mouseXButton2;
 			if (this._lastElementHover != null)
 			{
 				this._lastElementHover.MouseOut(new UIMouseEvent(this._lastElementHover, this.MousePosition));
@@ -67,8 +_,14 @@
 #endif
 			this._lastElementHover = null;
 			this._lastElementDown = null;
+			this._lastElementRightDown = null;
 			this._lastElementClicked = null;
+			this._lastElementRightClicked = null;
 			this._lastMouseDownTime = 0.0;
+			this._lastMouseRightDownTime = 0.0;
+			this._lastMouseMiddleDownTime = 0.0;
+			this._lastMouseXButton1DownTime = 0.0;
+			this._lastMouseXButton2DownTime = 0.0;
 			this._clickDisabledTimeRemaining = Math.Max(this._clickDisabledTimeRemaining, 200.0);
 		}
 
@@ -78,6 +_,10 @@
 			{
 				this.MousePosition = new Vector2((float)Main.mouseX, (float)Main.mouseY);
 				bool flag = Main.mouseLeft && Main.hasFocus;
+				bool mouseRightDown = Main.mouseRight && Main.hasFocus;
+				bool mouseMiddleDown = Main.mouseMiddle && Main.hasFocus;
+				bool mouseXButton1Down = Main.mouseXButton1 && Main.hasFocus;
+				bool mouseXButton2Down = Main.mouseXButton2 && Main.hasFocus;
 				UIElement uIElement = Main.hasFocus ? this._currentState.GetElementAt(this.MousePosition) : null;
 				this._clickDisabledTimeRemaining = Math.Max(0.0, this._clickDisabledTimeRemaining - time.ElapsedGameTime.TotalMilliseconds);
 				bool flag2 = this._clickDisabledTimeRemaining > 0.0;
@@ -115,15 +_,109 @@
 					lastElementDown.MouseUp(new UIMouseEvent(lastElementDown, this.MousePosition));
 					this._lastElementDown = null;
 				}
+				// tModLoader added functionality, right, middle, extra button 1 & 2 click Events
+				if (mouseRightDown && !this._wasMouseRightDown && uIElement != null && !flag2)
+				{
+					this._lastElementRightDown = uIElement;
+					uIElement.RightMouseDown(new UIMouseEvent(uIElement, this.MousePosition));
+					if (this._lastElementRightClicked == uIElement && time.TotalGameTime.TotalMilliseconds - this._lastMouseRightDownTime < 500.0)
+					{
+						uIElement.RightDoubleClick(new UIMouseEvent(uIElement, this.MousePosition));
+						this._lastElementRightClicked = null;
+					}
+					this._lastMouseRightDownTime = time.TotalGameTime.TotalMilliseconds;
+				}
+				else if (!mouseRightDown && this._wasMouseRightDown && this._lastElementRightDown != null && !flag2)
+				{
+					UIElement lastElementRightDown = this._lastElementRightDown;
+					if (lastElementRightDown.ContainsPoint(this.MousePosition))
+					{
+						lastElementRightDown.RightClick(new UIMouseEvent(lastElementRightDown, this.MousePosition));
+						this._lastElementRightClicked = this._lastElementRightDown;
+					}
+					lastElementRightDown.RightMouseUp(new UIMouseEvent(lastElementRightDown, this.MousePosition));
+					this._lastElementRightDown = null;
+				}
+				if(mouseMiddleDown && !this._wasMouseMiddleDown && uIElement != null && !flag2)
+				{
+					this._lastElementMiddleDown = uIElement;
+					uIElement.MiddleMouseDown(new UIMouseEvent(uIElement, this.MousePosition));
+					if(this._lastElementMiddleClicked == uIElement && time.TotalGameTime.TotalMilliseconds - this._lastMouseMiddleDownTime < 500.0)
+					{
+						uIElement.MiddleDoubleClick(new UIMouseEvent(uIElement, this.MousePosition));
+						this._lastElementMiddleClicked = null;
+					}
+					this._lastMouseMiddleDownTime = time.TotalGameTime.TotalMilliseconds;
+				}
+				else if(!mouseMiddleDown && this._wasMouseMiddleDown && this._lastElementMiddleDown != null && !flag2)
+				{
+					UIElement lastElementMiddleDown = this._lastElementMiddleDown;
+					if(lastElementMiddleDown.ContainsPoint(this.MousePosition))
+					{
+						lastElementMiddleDown.MiddleClick(new UIMouseEvent(lastElementMiddleDown, this.MousePosition));
+						this._lastElementMiddleClicked = this._lastElementMiddleDown;
+					}
+					lastElementMiddleDown.MiddleMouseUp(new UIMouseEvent(lastElementMiddleDown, this.MousePosition));
+					this._lastElementMiddleDown = null;
+				}
+				if(mouseXButton1Down && !this._wasMouseXButton1Down && uIElement != null && !flag2)
+				{
+					this._lastElementXButton1Down = uIElement;
+					uIElement.XButton1MouseDown(new UIMouseEvent(uIElement, this.MousePosition));
+					if(this._lastElementXButton1Clicked == uIElement && time.TotalGameTime.TotalMilliseconds - this._lastMouseXButton1DownTime < 500.0)
+					{
+						uIElement.XButton1DoubleClick(new UIMouseEvent(uIElement, this.MousePosition));
+						this._lastElementXButton1Clicked = null;
+					}
+					this._lastMouseXButton1DownTime = time.TotalGameTime.TotalMilliseconds;
+				}
+				else if(!mouseXButton1Down && this._wasMouseXButton1Down && this._lastElementXButton1Down != null && !flag2)
+				{
+					UIElement lastElementXButton1Down = this._lastElementXButton1Down;
+					if(lastElementXButton1Down.ContainsPoint(this.MousePosition))
+					{
+						lastElementXButton1Down.XButton1Click(new UIMouseEvent(lastElementXButton1Down, this.MousePosition));
+						this._lastElementXButton1Clicked = this._lastElementXButton1Down;
+					}
+					lastElementXButton1Down.XButton1MouseUp(new UIMouseEvent(lastElementXButton1Down, this.MousePosition));
+					this._lastElementXButton1Down = null;
+				}
+				if(mouseXButton2Down && !this._wasMouseXButton2Down && uIElement != null && !flag2)
+				{
+					this._lastElementXButton2Down = uIElement;
+					uIElement.XButton2MouseDown(new UIMouseEvent(uIElement, this.MousePosition));
+					if(this._lastElementXButton2Clicked == uIElement && time.TotalGameTime.TotalMilliseconds - this._lastMouseXButton2DownTime < 500.0)
+					{
+						uIElement.XButton2DoubleClick(new UIMouseEvent(uIElement, this.MousePosition));
+						this._lastElementXButton2Clicked = null;
+					}
+					this._lastMouseXButton2DownTime = time.TotalGameTime.TotalMilliseconds;
+				}
+				else if(!mouseXButton2Down && this._wasMouseXButton2Down && this._lastElementXButton2Down != null && !flag2)
+				{
+					UIElement lastElementXButton2Down = this._lastElementXButton2Down;
+					if(lastElementXButton2Down.ContainsPoint(this.MousePosition))
+					{
+						lastElementXButton2Down.XButton2Click(new UIMouseEvent(lastElementXButton2Down, this.MousePosition));
+						this._lastElementXButton2Clicked = this._lastElementXButton2Down;
+					}
+					lastElementXButton2Down.XButton2MouseUp(new UIMouseEvent(lastElementXButton2Down, this.MousePosition));
+					this._lastElementXButton2Down = null;
+				}
+
 				if (PlayerInput.ScrollWheelDeltaForUI != 0)
 				{
 					if (uIElement != null)
 					{
 						uIElement.ScrollWheel(new UIScrollWheelEvent(uIElement, this.MousePosition, PlayerInput.ScrollWheelDeltaForUI));
 					}
-					PlayerInput.ScrollWheelDeltaForUI = 0;
+					//PlayerInput.ScrollWheelDeltaForUI = 0;
 				}
 				this._wasMouseDown = flag;
+				this._wasMouseRightDown = mouseRightDown;
+				this._wasMouseMiddleDown = mouseMiddleDown;
+				this._wasMouseXButton1Down = mouseXButton1Down;
+				this._wasMouseXButton2Down = mouseXButton2Down;
 				if (this._currentState != null)
 				{
 					this._currentState.Update(time);

