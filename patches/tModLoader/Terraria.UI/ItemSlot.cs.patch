--- src/Terraria\Terraria.UI\ItemSlot.cs
+++ src/tModLoader\Terraria.UI\ItemSlot.cs
@@ -7,6 +_,7 @@
 using Terraria.GameContent.UI.Chat;
 using Terraria.GameInput;
 using Terraria.ID;
+using Terraria.ModLoader;
 using Terraria.UI.Chat;
 using Terraria.UI.Gamepad;
 
@@ -49,7 +_,7 @@
 		}
 
 		public static bool ShiftForcedOn;
-		private static Item[] singleSlotArray;
+		internal static Item[] singleSlotArray;
 		private static bool[] canFavoriteAt;
 		private static float[] inventoryGlowHue;
 		private static int[] inventoryGlowTime;
@@ -298,8 +_,8 @@
 			}
 			if (player.itemAnimation == 0 && player.itemTime == 0)
 			{
-				int num = ItemSlot.PickItemMovementAction(inv, context, slot, Main.mouseItem);
-				if (num == 0)
+				int clickAction = ItemSlot.PickItemMovementAction(inv, context, slot, Main.mouseItem);
+				if (clickAction == 0)
 				{
 					if (context == 6 && Main.mouseItem.type != 0)
 					{
@@ -364,7 +_,7 @@
 						NetMessage.SendData(32, -1, -1, null, player.chest, (float)slot, 0f, 0f, 0, 0, 0);
 					}
 				}
-				else if (num == 1)
+				else if (clickAction == 1)
 				{
 					if (Main.mouseItem.stack == 1 && Main.mouseItem.type > 0 && inv[slot].type > 0 && inv[slot].IsNotTheSameAs(Main.mouseItem))
 					{
@@ -460,7 +_,7 @@
 						}
 					}
 				}
-				else if (num == 2)
+				else if (clickAction == 2)
 				{
 					if (Main.mouseItem.stack == 1 && Main.mouseItem.dye > 0 && inv[slot].type > 0 && inv[slot].type != Main.mouseItem.type)
 					{
@@ -556,12 +_,15 @@
 						}
 					}
 				}
-				else if (num == 3)
-				{
-					Main.mouseItem.netDefaults(inv[slot].netID);
+				#region 3 | buy item
+				else if (clickAction == 3)
+				{
+					Main.mouseItem = inv[slot].Clone();
+					Main.mouseItem.stack = 1;
+					Main.mouseItem.value *= 5; // preserve item value
 					if (inv[slot].buyOnce)
 					{
-						Main.mouseItem.Prefix((int)inv[slot].prefix);
+						//Main.mouseItem.Prefix((int)inv[slot].prefix);
 					}
 					else
 					{
@@ -582,7 +_,8 @@
 						Main.PlaySound(7, -1, -1, 1, 1f, 0f);
 					}
 				}
-				else if (num == 4)
+				#endregion
+				else if (clickAction == 4)
 				{
 					Chest chest = Main.instance.shop[Main.npcShop];
 					if (player.SellItem(Main.mouseItem.value, Main.mouseItem.stack))
@@ -620,7 +_,10 @@
 			Player player = Main.player[Main.myPlayer];
 			if (inv[slot].type > 0)
 			{
-				if (Main.npcShop > 0 && !inv[slot].favorited)
+				if (PlayerHooks.ShiftClickSlot(player, inv, context, slot))
+				{
+				}
+				else if (Main.npcShop > 0 && !inv[slot].favorited)
 				{
 					Chest chest = Main.instance.shop[Main.npcShop];
 					if (inv[slot].type >= 71 && inv[slot].type <= 74)
@@ -887,7 +_,7 @@
 			if (context == 0)
 			{
 				flag = true;
-				if (Main.mouseRight && ((inv[slot].type >= 3318 && inv[slot].type <= 3332) || inv[slot].type == 3860 || inv[slot].type == 3862 || inv[slot].type == 3861))
+				if (Main.mouseRight && ((inv[slot].type >= 3318 && inv[slot].type <= 3332) || inv[slot].type == 3860 || inv[slot].type == 3862 || inv[slot].type == 3861 || ItemLoader.IsModBossBag(inv[slot])))
 				{
 					if (Main.mouseRightRelease)
 					{
@@ -1004,6 +_,10 @@
 						inv[slot].stack = Main.rand.Next(20, 50);
 					}
 					Recipe.FindRecipes();
+				}
+				else if (ItemLoader.CanRightClick(inv[slot]))
+				{
+					ItemLoader.RightClick(inv[slot], player);
 				}
 				else
 				{
@@ -1579,11 +_,17 @@
 				num9 *= inventoryScale;
 				Vector2 position2 = position + vector / 2f - rectangle2.Size() * num9 / 2f;
 				Vector2 origin = rectangle2.Size() * (num8 / 2f - 0.5f);
-				spriteBatch.Draw(texture2D3, position2, new Rectangle?(rectangle2), item.GetAlpha(newColor), 0f, origin, num9 * num8, SpriteEffects.None, 0f);
-				if (item.color != Color.Transparent)
-				{
-					spriteBatch.Draw(texture2D3, position2, new Rectangle?(rectangle2), item.GetColor(color), 0f, origin, num9 * num8, SpriteEffects.None, 0f);
-				}
+				if (ItemLoader.PreDrawInInventory(item, spriteBatch, position2, rectangle2, item.GetAlpha(newColor),
+					item.GetColor(color), origin, num9 * num8))
+				{
+					spriteBatch.Draw(texture2D3, position2, new Rectangle?(rectangle2), item.GetAlpha(newColor), 0f, origin, num9 * num8, SpriteEffects.None, 0f);
+					if (item.color != Color.Transparent)
+					{
+						spriteBatch.Draw(texture2D3, position2, new Rectangle?(rectangle2), item.GetColor(color), 0f, origin, num9 * num8, SpriteEffects.None, 0f);
+					}
+				}
+				ItemLoader.PostDrawInInventory(item, spriteBatch, position2, rectangle2, item.GetAlpha(newColor),
+					item.GetColor(color), origin, num9 * num8);
 				if (ItemID.Sets.TrapSigned[item.type])
 				{
 					spriteBatch.Draw(Main.wireTexture, position + new Vector2(40f, 40f) * inventoryScale, new Rectangle?(new Rectangle(4, 58, 8, 8)), color, 0f, new Vector2(4f), 1f, SpriteEffects.None, 0f);
@@ -1825,7 +_,7 @@
 				}
 				if (player.armor[slot].wingSlot > 0 && item.wingSlot > 0)
 				{
-					return false;
+					return !ItemLoader.CanEquipAccessory(item, slot);
 				}
 			}
 			for (int i = 0; i < player.armor.Length; i++)
@@ -1846,7 +_,7 @@
 					return true;
 				}
 			}
-			return false;
+			return !ItemLoader.CanEquipAccessory(item, slot);
 		}
 
 		private static Item DyeSwap(Item item, out bool success)
@@ -1934,6 +_,15 @@
 						ItemSlot.accSlotCount = j - 3;
 					}
 				}
+				for (int k = 0; k < num2; k++)
+				{
+					int index = 3 + (ItemSlot.accSlotCount + num2) % num2;
+					if (ItemLoader.CanEquipAccessory(item, index))
+					{
+						ItemSlot.accSlotCount = index - 3;
+						break;
+					}
+				}
 				if (ItemSlot.accSlotCount >= num2)
 				{
 					ItemSlot.accSlotCount = 0;
@@ -1949,6 +_,10 @@
 					{
 						num3 = k;
 					}
+				}
+				if (!ItemLoader.CanEquipAccessory(item, num3))
+				{
+					return item;
 				}
 				result = player.armor[num3].Clone();
 				player.armor[num3] = item.Clone();
@@ -2219,7 +_,7 @@
 
 		public static Color GetItemLight(ref Color currentColor, ref float scale, int type, bool outInTheWorld = false)
 		{
-			if (type < 0 || type > 3930)
+			if (type < 0)
 			{
 				return currentColor;
 			}

