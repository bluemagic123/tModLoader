--- src/Terraria/Terraria.GameContent.UI.Elements/UICharacterListItem.cs
+++ src/tModLoader/Terraria.GameContent.UI.Elements/UICharacterListItem.cs
@@ -6,6 +_,10 @@
 using Terraria.Localization;
 using Terraria.Social;
 using Terraria.UI;
+using System.Reflection;
+using Terraria.ModLoader;
+using System.Linq;
+using Terraria.ModLoader.UI;
 
 namespace Terraria.GameContent.UI.Elements
 {
@@ -23,6 +_,8 @@
 		private Texture2D _buttonFavoriteInactiveTexture;
 		private Texture2D _buttonPlayTexture;
 		private Texture2D _buttonDeleteTexture;
+		private Texture2D _errorTexture;
+		private Texture2D _configTexture;
 		private UIImageButton _deleteButton;
 
 		public bool IsFavorite => _data.IsFavorite;
@@ -37,6 +_,8 @@
 			_buttonFavoriteInactiveTexture = TextureManager.Load("Images/UI/ButtonFavoriteInactive");
 			_buttonPlayTexture = TextureManager.Load("Images/UI/ButtonPlay");
 			_buttonDeleteTexture = TextureManager.Load("Images/UI/ButtonDelete");
+			_errorTexture = UICommon.ButtonErrorTexture;
+			_configTexture = UICommon.ButtonConfigTexture;
 			Height.Set(96f, 0f);
 			Width.Set(0f, 1f);
 			SetPadding(6f);
@@ -82,15 +_,82 @@
 			if (!_data.IsFavorite)
 				Append(uIImageButton4);
 
+			if (data.customDataFail != null) {
+				UIImageButton uIImageButton5 = new UIImageButton(_errorTexture);
+				uIImageButton5.VAlign = 1f;
+				uIImageButton5.HAlign = 1f;
+				uIImageButton5.Left.Set(-24f, 0f);
+				uIImageButton5.OnClick += new MouseEvent(ErrorButtonClick);
+				uIImageButton5.OnMouseOver += new MouseEvent(ErrorMouseOver);
+				uIImageButton5.OnMouseOut += new MouseEvent(DeleteMouseOut);
+				Append(uIImageButton5);
+			}
+
+			if (data.Player.usedMods != null) {
+				var currentModNames = ModLoader.ModLoader.Mods.Select(m => m.Name).ToArray();
+				var missingMods = data.Player.usedMods.Except(currentModNames).ToList();
+				var newMods = currentModNames.Except(new[] { "ModLoader" }).Except(data.Player.usedMods).ToList();
+				if (missingMods.Count > 0 || newMods.Count > 0) {
+					UIText warningLabel = new UIText("", 1f, false) {
+						VAlign = 0f,
+						HAlign = 1f
+					};
+
+					warningLabel.Left.Set(-30f, 0f);
+					warningLabel.Top.Set(3f, 0f);
+					Append(warningLabel);
+					UIImageButton modListWarning = new UIImageButton(_errorTexture) {
+						VAlign = 0f,
+						HAlign = 1f
+					};
+
+					modListWarning.Top.Set(-2f, 0f);
+					System.Text.StringBuilder fullSB = new System.Text.StringBuilder(Language.GetTextValue("tModLoader.ModsDifferentSinceLastPlay"));
+					System.Text.StringBuilder shortSB = new System.Text.StringBuilder();
+					if (missingMods.Count > 0) {
+						shortSB.Append(missingMods.Count > 1 ? Language.GetTextValue("tModLoader.MissingXMods", missingMods.Count) : Language.GetTextValue("tModLoader.Missing1Mod"));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.MissingModsListing", string.Join("\n", missingMods.Select(x => "- " + x))));
+					}
+
+					if (newMods.Count > 0) {
+						shortSB.Append(" " + (newMods.Count > 1 ? Language.GetTextValue("tModLoader.NewXMods", newMods.Count) : Language.GetTextValue("tModLoader.New1Mod")));
+						fullSB.Append("\n" + Language.GetTextValue("tModLoader.NewModsListing", string.Join("\n", newMods.Select(x => "- " + x))));
+					}
+
+					string warning = shortSB.ToString();
+					string fullWarning = fullSB.ToString();
+					modListWarning.OnMouseOver += (a, b) => warningLabel.SetText(warning);
+					modListWarning.OnMouseOut += (a, b) => warningLabel.SetText("");
+					modListWarning.OnClick += (a, b) => {
+						Interface.infoMessage.Show(fullWarning, 888, Main._characterSelectMenu);
+					};
+
+					Append(modListWarning);
+				}
+			}
+
+			int buttonLabelLeft = 80;
+			//if(ConfigManager.Configs.Count > 0)
+			//{
+			//	UIImageButton configButton = new UIImageButton(this._configTexture);
+			//	configButton.VAlign = 1f;
+			//	configButton.Left.Set(76, 0f);
+			//	configButton.OnClick += new UIElement.MouseEvent(this.ConfigButtonClick);
+			//	configButton.OnMouseOver += new UIElement.MouseEvent(this.ConfigMouseOver);
+			//	configButton.OnMouseOut += new UIElement.MouseEvent(this.ButtonMouseOut);
+			//	base.Append(configButton);
+
+			//	buttonLabelLeft += 24;
+			//}
 			_buttonLabel = new UIText("");
 			_buttonLabel.VAlign = 1f;
-			_buttonLabel.Left.Set(80f, 0f);
+			_buttonLabel.Left.Set(buttonLabelLeft, 0f);
 			_buttonLabel.Top.Set(-3f, 0f);
 			Append(_buttonLabel);
 			_deleteButtonLabel = new UIText("");
 			_deleteButtonLabel.VAlign = 1f;
 			_deleteButtonLabel.HAlign = 1f;
-			_deleteButtonLabel.Left.Set(-30f, 0f);
+			_deleteButtonLabel.Left.Set(data.customDataFail == null ? -30f : -54f, 0f);
 			_deleteButtonLabel.Top.Set(-3f, 0f);
 			Append(_deleteButtonLabel);
 			uIImageButton.SetSnapPoint("Play", snapPointIndex);
@@ -120,6 +_,14 @@
 			_deleteButtonLabel.SetText(Language.GetTextValue("UI.Delete"));
 		}
 
+		private void ErrorMouseOver(UIMouseEvent evt, UIElement listeningElement) {
+			_deleteButtonLabel.SetText(_data.customDataFail.modName + " Error");
+		}
+
+		private void ConfigMouseOver(UIMouseEvent evt, UIElement listeningElement) {
+			_buttonLabel.SetText("Edit Player Config");
+		}
+
 		private void DeleteMouseOut(UIMouseEvent evt, UIElement listeningElement) {
 			_deleteButtonLabel.SetText("");
 		}
@@ -181,6 +_,13 @@
 			(Parent.Parent as UIList)?.UpdateOrder();
 		}
 
+		private void ErrorButtonClick(UIMouseEvent evt, UIElement listeningElement) {
+			Logging.Terraria.Error(Language.GetTextValue("tModLoader.PlayerCustomDataFail"), _data.customDataFail.InnerException);
+		}
+
+		private void ConfigButtonClick(UIMouseEvent evt, UIElement listeningElement) {
+		}
+
 		public override int CompareTo(object obj) {
 			UICharacterListItem uICharacterListItem = obj as UICharacterListItem;
 			if (uICharacterListItem != null) {
@@ -230,11 +_,11 @@
 			DrawPanel(spriteBatch, vector2, num2);
 			spriteBatch.Draw(Main.heartTexture, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)Main.heartTexture.Width;
-			Utils.DrawBorderString(spriteBatch, _data.Player.statLifeMax + " HP", vector2 + new Vector2(0f, 3f), Color.White);
+			Utils.DrawBorderString(spriteBatch, _data.Player.statLifeMax2 + " HP", vector2 + new Vector2(0f, 3f), Color.White);
 			vector2.X += 65f;
 			spriteBatch.Draw(Main.manaTexture, vector2 + new Vector2(5f, 2f), Color.White);
 			vector2.X += 10f + (float)Main.manaTexture.Width;
-			Utils.DrawBorderString(spriteBatch, _data.Player.statManaMax + " MP", vector2 + new Vector2(0f, 3f), Color.White);
+			Utils.DrawBorderString(spriteBatch, _data.Player.statManaMax2 + " MP", vector2 + new Vector2(0f, 3f), Color.White);
 			vector.X += num2 + 5f;
 			Vector2 vector3 = vector;
 			float num3 = 140f;
