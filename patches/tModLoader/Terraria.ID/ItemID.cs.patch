--- src/Terraria\Terraria.ID\ItemID.cs
+++ src/tModLoader\Terraria.ID\ItemID.cs
@@ -1,6 +_,7 @@
 using ReLogic.Reflection;
 using System;
 using System.Collections.Generic;
+using Terraria.ModLoader;
 
 namespace Terraria.ID
 {
@@ -306,7 +_,7 @@
 					1103,
 					0,
 					3347,
-					1
+					3347
 				});
 			public static int[] StaffMinionSlotsRequired = ItemID.Sets.Factory.CreateIntSet(1, new int[0]);
 			public static bool[] ExoticPlantsForDyeTrade = ItemID.Sets.Factory.CreateBoolSet(new int[]
@@ -889,6 +_,7 @@
 					431,
 					432
 				});
+			public static bool[] IsAMaterial = ItemID.Sets.Factory.CreateBoolSet();
 		}
 
 		public const short YellowPhasesaberOld = -24;
@@ -7655,5 +_,36 @@
 			}
 			return 0;
 		}
+
+		public static string GetReadableUniqueKey(int itemType) {
+			if ( ItemID.Search.ContainsId(itemType) ) {
+				return "Terraria " + ItemID.Search.GetName(itemType);
+			}
+
+			var item = new Item();
+			item.SetDefaults(itemType, true);
+
+			if ( item.modItem != null ) {
+				return ItemID.GetReadableUniqueKey(item.modItem);
+			}
+
+			throw new ArgumentOutOfRangeException("Invalid `Item.type` value.");
+		}
+
+		public static string GetReadableUniqueKey(Item item) {
+			if ( ItemID.Search.ContainsId(item.type) ) {
+				return "Terraria " + ItemID.Search.GetName(item.type);
+			}
+			
+			if ( item.modItem != null ) {
+				return ItemID.GetReadableUniqueKey(item.modItem);
+			}
+
+			throw new ArgumentException("Invalid `Item`.");
+		}
+
+		public static string GetReadableUniqueKey(ModItem modItem) {
+			return modItem.mod.Name + " " + modItem.Name;
+		}
 	}
 }

