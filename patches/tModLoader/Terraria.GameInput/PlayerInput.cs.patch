--- src/Terraria\Terraria.GameInput\PlayerInput.cs
+++ src/tModLoader\Terraria.GameInput\PlayerInput.cs
@@ -8,6 +_,7 @@
 using Terraria.GameContent.UI.States;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
 using Terraria.Social;
 using Terraria.UI;
 using Terraria.UI.Gamepad;
@@ -26,6 +_,9 @@
 		{
 			"MouseLeft",
 			"MouseRight",
+			"MouseMiddle",
+			"MouseXButton1",
+			"MouseXButton2",
 			"Up",
 			"Down",
 			"Left",
@@ -332,6 +_,42 @@
 			}
 		}
 
+		// To allow mod hotkeys to load, need to reinitialize after load.
+		public static void ReInitialize()
+		{
+			PlayerInput.Profiles.Clear();
+			PlayerInput.OriginalProfiles.Clear();
+			PlayerInputProfile playerInputProfile = new PlayerInputProfile("Redigit's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			PlayerInput.Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Yoraiz0r's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Yoraiz0r);
+			PlayerInput.Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Playstation)");
+			playerInputProfile.Initialize(PresetProfiles.ConsolePS);
+			PlayerInput.Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Xbox)");
+			playerInputProfile.Initialize(PresetProfiles.ConsoleXBox);
+			PlayerInput.Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Custom");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			PlayerInput.Profiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Redigit's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Redigit);
+			PlayerInput.OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Yoraiz0r's Pick");
+			playerInputProfile.Initialize(PresetProfiles.Yoraiz0r);
+			PlayerInput.OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Playstation)");
+			playerInputProfile.Initialize(PresetProfiles.ConsolePS);
+			PlayerInput.OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			playerInputProfile = new PlayerInputProfile("Console (Xbox)");
+			playerInputProfile.Initialize(PresetProfiles.ConsoleXBox);
+			PlayerInput.OriginalProfiles.Add(playerInputProfile.Name, playerInputProfile);
+			PlayerInput.Triggers.Initialize(); // Populates triggers with known hotkeys
+			PlayerInput.Load(); // Loads the JSON into the Profiles above
+		}
+
 		public static void Initialize()
 		{
 			Main.InputProfiles.OnProcessText += new Preferences.TextProcessAction(PlayerInput.PrettyPrintProfiles);
@@ -521,6 +_,10 @@
 			PlayerInput.UpdateMainMouse();
 			Main.mouseLeft = PlayerInput.Triggers.Current.MouseLeft;
 			Main.mouseRight = PlayerInput.Triggers.Current.MouseRight;
+			Main.mouseMiddle = PlayerInput.Triggers.Current.MouseMiddle;
+			Main.mouseXButton1 = PlayerInput.Triggers.Current.MouseXButton1;
+			Main.mouseXButton2 = PlayerInput.Triggers.Current.MouseXButton2;
+
 			PlayerInput.CacheZoomableValues();
 		}
 
@@ -735,6 +_,8 @@
 				keyConfiguration.Processkey(PlayerInput.Triggers.Current, Buttons.RightTrigger.ToString());
 				flag = true;
 			}
+			// We might just need a bool for while reloading.
+			if (player.inventory[player.selectedItem].type >= ItemID.Sets.GamepadWholeScreenUseRange.Length) return;
 			bool flag4 = ItemID.Sets.GamepadWholeScreenUseRange[player.inventory[player.selectedItem].type] || player.scope;
 			int num3 = player.inventory[player.selectedItem].tileBoost + ItemID.Sets.GamepadExtraRange[player.inventory[player.selectedItem].type];
 			if (player.yoyoString && ItemID.Sets.Yoyo[player.inventory[player.selectedItem].type])
@@ -1041,6 +_,9 @@
 			{
 				"MouseLeft",
 				"MouseRight",
+				"MouseMiddle",
+				"MouseXButton1",
+				"MouseXButton2",
 				"Inventory"
 			};
 			foreach (InputMode inputMode in Enum.GetValues(typeof(InputMode)))
@@ -1218,7 +_,7 @@
 						int num = 6;
 						if (ItemSlot.IsABuildingItem(player.inventory[player.selectedItem]))
 						{
-							num = player.inventory[player.selectedItem].useTime;
+							num = (int)(player.inventory[player.selectedItem].useTime / PlayerHooks.TotalUseTimeMultiplier(player, player.inventory[player.selectedItem]));
 						}
 						PlayerInput.DpadSnapCooldown[i] = num;
 						value += value2;
@@ -1493,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1524,11 +_,18 @@
 							c.KeyStatus["Hotbar10"].Add("D0");
 							c.KeyStatus["ViewZoomOut"].Add("OemMinus");
 							c.KeyStatus["ViewZoomIn"].Add("OemPlus");
+							foreach (var item in ModLoader.ModContent.modHotKeys)
+							{
+								c.KeyStatus[item.Value.displayName].Add(item.Value.defaultKey);
+							}
 							return;
 						case InputMode.KeyboardUI:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1603,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1634,11 +_,18 @@
 							c.KeyStatus["Hotbar10"].Add("D0");
 							c.KeyStatus["ViewZoomOut"].Add("OemMinus");
 							c.KeyStatus["ViewZoomIn"].Add("OemPlus");
+							foreach (var item in ModLoader.ModContent.modHotKeys)
+							{
+								c.KeyStatus[item.Value.displayName].Add(item.Value.defaultKey);
+							}
 							return;
 						case InputMode.KeyboardUI:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1712,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1743,11 +_,18 @@
 							c.KeyStatus["Hotbar10"].Add("D0");
 							c.KeyStatus["ViewZoomOut"].Add("OemMinus");
 							c.KeyStatus["ViewZoomIn"].Add("OemPlus");
+							foreach (var item in ModLoader.ModContent.modHotKeys)
+							{
+								c.KeyStatus[item.Value.displayName].Add(item.Value.defaultKey);
+							}
 							return;
 						case InputMode.KeyboardUI:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");
@@ -1821,6 +_,9 @@
 						case InputMode.Keyboard:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Down"].Add("S");
 							c.KeyStatus["Left"].Add("A");
@@ -1852,11 +_,18 @@
 							c.KeyStatus["Hotbar10"].Add("D0");
 							c.KeyStatus["ViewZoomOut"].Add("OemMinus");
 							c.KeyStatus["ViewZoomIn"].Add("OemPlus");
+							foreach (var item in ModLoader.ModContent.modHotKeys)
+							{
+								c.KeyStatus[item.Value.displayName].Add(item.Value.defaultKey);
+							}
 							return;
 						case InputMode.KeyboardUI:
 							c.KeyStatus["MouseLeft"].Add("Mouse1");
 							c.KeyStatus["MouseLeft"].Add("Space");
 							c.KeyStatus["MouseRight"].Add("Mouse2");
+							c.KeyStatus["MouseMiddle"].Add("Mouse3");
+							c.KeyStatus["MouseXButton1"].Add("Mouse4");
+							c.KeyStatus["MouseXButton2"].Add("Mouse5");
 							c.KeyStatus["Up"].Add("W");
 							c.KeyStatus["Up"].Add("Up");
 							c.KeyStatus["Down"].Add("S");

