--- src/Terraria\Terraria\NPC.cs
+++ src/tModLoader\Terraria\NPC.cs
@@ -9,11 +9,18 @@
 using Terraria.GameContent.Tile_Entities;
 using Terraria.GameContent.UI;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
 	public class NPC : Entity
 	{
+		public ModNPC modNPC
+		{
+			get;
+			internal set;
+		}
+
 		public const int MaxMoonLordCountdown = 3600;
 		public const int maxBuffs = 5;
 		public const int breathMax = 200;
@@ -1684,7 +1691,7 @@
 			{
 				return 23;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCHeadSlot(type);
 		}
 
 		public static int NumToType(int type)
@@ -1781,7 +1788,7 @@
 			{
 				return 441;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCFromHeadSlot(type);
 		}
 
 		public int GetBossHeadTextureIndex()
@@ -1835,6 +1842,7 @@
 			{
 				result = 12;
 			}
+			NPCLoader.BossHeadSlot(this, ref result);
 			return result;
 		}
 
@@ -1880,6 +1888,7 @@
 			{
 				result = this.rotation;
 			}
+			NPCLoader.BossHeadRotation(this, ref result);
 			return result;
 		}
 
@@ -1891,6 +1900,7 @@
 			{
 				result = SpriteEffects.FlipHorizontally;
 			}
+			NPCLoader.BossHeadSpriteEffects(this, ref result);
 			return result;
 		}
 
@@ -3127,6 +3137,7 @@
 
 		public void SetDefaults(int Type, float scaleOverride = -1f)
 		{
+			this.modNPC = null;
 			this.takenDamageMultiplier = 1f;
 			this.extraValue = 0f;
 			for (int i = 0; i < this.playerInteraction.Length; i++)
@@ -11532,6 +11543,8 @@
 				this.catchItem = 3564;
 				this.rarity = 3;
 			}
+			this.displayName = Lang.npcName(this.type, false);
+			NPCLoader.SetupNPC(this);
 			if (flag)
 			{
 				for (int num2 = 0; num2 < 191; num2++)
@@ -11584,7 +11597,6 @@
 			this.defDamage = this.damage;
 			this.defDefense = this.defense;
 			this.netID = this.type;
-			this.displayName = Lang.npcName(this.netID, false);
 			if (Main.expertMode)
 			{
 				this.scaleStats();
@@ -11895,12 +11907,18 @@
 					this.damage = (int)((double)this.damage * 0.75);
 					break;
 			}
+			NPCLoader.ScaleExpertStats(this, num4, num5);
 			this.defDefense = this.defense;
 			this.defDamage = this.damage;
 			this.life = this.lifeMax;
 		}
 
 		public void AI()
+		{
+			NPCLoader.NPCAI(this);
+		}
+
+		public void VanillaAI()
 		{
 			if (this.aiStyle == 0)
 			{
@@ -16744,7 +16762,7 @@
 								}
 								else
 								{
-									if (Main.tile[num210, num211 - 1].type == 10)
+									if (TileLoader.OpenDoorID(Main.tile[num210, num211 - 1]) >= 0)
 									{
 										bool flag26 = WorldGen.OpenDoor(num210, num211 - 1, this.direction);
 										if (!flag26)
@@ -20010,7 +20028,7 @@
 						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
 						{
 							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
-							if (tileSafely.type == 11)
+							if (TileLoader.CloseDoorID(tileSafely) >= 0)
 							{
 								bool flag47 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
 								if (flag47)
@@ -20183,7 +20201,7 @@
 							Tile tileSafely3 = Framing.GetTileSafely(num398, num399);
 							Tile tileSafely4 = Framing.GetTileSafely(num398, num399 - 1);
 							Tile tileSafely5 = Framing.GetTileSafely(num398, num399 - 2);
-							if (this.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
+							if (this.townNPC && tileSafely5.nactive() && (TileLoader.OpenDoorID(tileSafely5) >= 0 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
 							{
 								if (Main.netMode != 1)
 								{
@@ -45054,6 +45072,11 @@
 				}
 				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
 			}
+			NPCLoader.FindFrame(this, num);
+		}
+
+		public void VanillaFindFrame(int num)
+		{
 			int num2 = 0;
 			if (this.aiAction == 0)
 			{
@@ -53816,7 +53839,7 @@
 
 		public void NPCLoot()
 		{
-			if (Main.netMode == 1 || this.type >= 540)
+			if (Main.netMode == 1)
 			{
 				return;
 			}
@@ -53922,6 +53945,10 @@
 					{
 						num6 = 2897 + num3 - 88;
 					}
+					if (num3 >= NPCID.Count)
+					{
+						num6 = NPCLoader.npcs[num3].bannerItem;
+					}
 					Vector2 position = this.position;
 					if (num5 >= 0 && num5 < 255)
 					{
@@ -53931,6 +53958,10 @@
 				}
 			}
 			if (this.type == 23 && Main.hardMode)
+			{
+				return;
+			}
+			if (!NPCLoader.PreNPCLoot(this))
 			{
 				return;
 			}
@@ -57065,6 +57096,7 @@
 				{
 					num70 = 499;
 				}
+				NPCLoader.BossLoot(this, ref name, ref num70);
 				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num70, stack5, false, 0, false, false);
 				int num71 = Main.rand.Next(5) + 5;
 				for (int num72 = 0; num72 < num71; num72++)
@@ -57135,6 +57167,7 @@
 					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
 				}
 			}
+			NPCLoader.NPCLoot(this);
 			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
 			{
 				int num73 = (int)Player.FindClosest(this.position, this.width, this.height);
@@ -57329,6 +57362,7 @@
 			{
 				num = 3332;
 			}
+			NPCLoader.BossBag(this, ref num);
 			if (num > 0)
 			{
 				if (Main.netMode == 2)
@@ -57908,6 +57942,7 @@
 							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
 						}
 					}
+					NPCLoader.EditSpawnRate(Main.player[j], ref NPC.spawnRate, ref NPC.maxSpawns);
 					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
 					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
 					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
@@ -57949,6 +57984,8 @@
 							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
 							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
 						}
+						NPCLoader.EditSpawnRange(Main.player[j], ref NPC.spawnRangeX, ref NPC.spawnRangeY,
+							ref NPC.safeRangeX, ref NPC.safeRangeY);
 						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
 						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
 						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
@@ -58099,6 +58136,7 @@
 							}
 						}
 					}
+					NPCSpawnInfo spawnInfo = new NPCSpawnInfo();
 					if (flag13)
 					{
 						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
@@ -58203,6 +58241,8 @@
 								}
 							}
 						}
+						spawnInfo.playerFloorX = num25;
+						spawnInfo.playerFloorY = num26;
 					}
 					if (flag6)
 					{
@@ -58268,8 +58308,33 @@
 								}
 							}
 						}
+						spawnInfo.spawnTileX = num;
+						spawnInfo.spawnTileY = num2;
+						spawnInfo.player = Main.player[j];
+						spawnInfo.sky = flag;
+						spawnInfo.lihzahrd = flag2;
+						spawnInfo.playerSafe = flag3;
+						spawnInfo.invasion = flag4;
+						spawnInfo.water = flag5;
+						spawnInfo.granite = flag7;
+						spawnInfo.marble = flag8;
+						spawnInfo.spiderCave = flag9;
+						spawnInfo.playerInTown = flag10;
+						spawnInfo.desertCave = flag11;
+						spawnInfo.planteraDefeated = flag12;
+						spawnInfo.safeRangeX = flag14;
 						int num45 = (int)Main.tile[num, num2].type;
 						int num46 = 200;
+						int? spawnChoice = NPCLoader.ChooseSpawn(spawnInfo);
+						if (!spawnChoice.HasValue)
+						{
+							return;
+						}
+						int spawn = spawnChoice.Value;
+						if (spawn != 0)
+						{
+							goto endVanillaSpawn;
+						}
 						if (Main.player[j].ZoneTowerNebula)
 						{
 							bool flag15 = true;
@@ -61228,6 +61293,11 @@
 						{
 							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
 						}
+						endVanillaSpawn: //this ugly code is just to minimize the diff file
+						if (spawn != 0)
+						{
+							num46 = NPCLoader.SpawnNPC(spawn, num, num2);
+						}
 						if (Main.npc[num46].type == 1 && Main.rand.Next(180) == 0)
 						{
 							Main.npc[num46].SetDefaults("Pinky");
@@ -62016,14 +62086,17 @@
 			{
 				num2 = 0;
 			}
-			num = Main.CalculateDamage((int)num, num2);
-			if (crit)
-			{
-				num *= 2.0;
-			}
-			if (this.takenDamageMultiplier > 1f)
-			{
-				num *= (double)this.takenDamageMultiplier;
+			if (NPCLoader.StrikeNPC(this, ref num, num2, ref knockBack, hitDirection, ref crit))
+			{
+				num = Main.CalculateDamage((int)num, num2);
+				if (crit)
+				{
+					num *= 2.0;
+				}
+				if (this.takenDamageMultiplier > 1f)
+				{
+					num *= (double)this.takenDamageMultiplier;
+				}
 			}
 			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
 			{
@@ -62273,6 +62346,11 @@
 		}
 
 		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
+		{
+			NPCLoader.HitEffect(this, hitDirection, dmg);
+		}
+
+		public void VanillaHitEffect(int hitDirection = 0, double dmg = 10.0)
 		{
 			if (!this.active)
 			{
@@ -70451,22 +70529,30 @@
 							if (Main.npc[num39].active && !Main.npc[num39].friendly && Main.npc[num39].damage > 0)
 							{
 								Rectangle rectangle2 = new Rectangle((int)Main.npc[num39].position.X, (int)Main.npc[num39].position.Y, Main.npc[num39].width, Main.npc[num39].height);
-								if (rectangle.Intersects(rectangle2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
+								bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num39], this);
+								if (modCanHit.HasValue && !modCanHit.Value)
+								{
+									continue;
+								}
+								if (rectangle.Intersects(rectangle2) && ((modCanHit.HasValue && modCanHit.Value) || this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
 								{
 									int num40 = Main.npc[num39].damage;
-									int num41 = 6;
+									float num41 = 6;
 									int num42 = 1;
 									if (Main.npc[num39].position.X + (float)(Main.npc[num39].width / 2) > this.position.X + (float)(this.width / 2))
 									{
 										num42 = -1;
 									}
+									bool crit = false;
+									NPCLoader.ModifyHitNPC(Main.npc[num39], this, ref num40, ref num41, ref crit);
 									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
 									if (Main.netMode != 0)
 									{
-										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, 0, 0, 0);
+										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, crit ? 1 : 0, 0, 0);
 									}
 									this.netUpdate = true;
 									this.immune[255] = 30;
+									NPCLoader.OnHitNPC(Main.npc[num39], this, (int)num43, num41, crit);
 									if (this.dryadWard)
 									{
 										num40 = (int)num43 / 3;
@@ -71275,6 +71361,11 @@
 
 		public Color GetAlpha(Color newColor)
 		{
+			Color? modColor = NPCLoader.GetAlpha(this, newColor);
+			if (modColor.HasValue)
+			{
+				return modColor.Value;
+			}
 			float num = (float)(255 - this.alpha) / 255f;
 			int num2 = (int)((float)newColor.R * num);
 			int num3 = (int)((float)newColor.G * num);

