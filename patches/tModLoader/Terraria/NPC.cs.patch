--- src/Terraria\Terraria\NPC.cs
+++ src/tModLoader\Terraria\NPC.cs
@@ -9,11 +_,30 @@
 using Terraria.GameContent.Tile_Entities;
 using Terraria.GameContent.UI;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
 	public class NPC : Entity
 	{
+		public ModNPC modNPC
+		{
+			get;
+			internal set;
+		}
+
+		internal NPCInfo[] npcInfo = new NPCInfo[0];
+
+		public NPCInfo GetModInfo(Mod mod, string name)
+		{
+			return NPCLoader.GetNPCInfo(this, mod, name);
+		}
+
+		public T GetModInfo<T>(Mod mod) where T : NPCInfo
+		{
+			return (T)GetModInfo(mod, typeof(T).Name);
+		}
+
 		public const int MaxMoonLordCountdown = 3600;
 		public const int maxBuffs = 5;
 		public const int breathMax = 200;
@@ -75,13 +_,13 @@
 		private static int townRangeY = NPC.sHeight;
 		public float npcSlots = 1f;
 		private static bool noSpawnCycle = false;
-		private static int activeTime = 750;
+		public static int activeTime = 750;
 		private static int defaultSpawnRate = 600;
 		private static int defaultMaxSpawns = 5;
 		public bool dontCountMe;
 		public int[] buffType = new int[5];
 		public int[] buffTime = new int[5];
-		public bool[] buffImmune = new bool[191];
+		public bool[] buffImmune = new bool[BuffLoader.BuffCount];
 		public bool midas;
 		public bool ichor;
 		public bool onFire;
@@ -1524,7 +_,7 @@
 						return "Agnew";
 				}
 			}
-			return "";
+			return NPCLoader.TownNPCName(npcType);
 		}
 
 		public static void setNPCName(string newName, int npcType, bool resetExtras = false)
@@ -1684,7 +_,7 @@
 			{
 				return 23;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCHeadSlot(type);
 		}
 
 		public static int NumToType(int type)
@@ -1781,7 +_,7 @@
 			{
 				return 441;
 			}
-			return -1;
+			return NPCHeadLoader.GetNPCFromHeadSlot(type);
 		}
 
 		public int GetBossHeadTextureIndex()
@@ -1835,6 +_,7 @@
 			{
 				result = 12;
 			}
+			NPCLoader.BossHeadSlot(this, ref result);
 			return result;
 		}
 
@@ -1880,6 +_,7 @@
 			{
 				result = this.rotation;
 			}
+			NPCLoader.BossHeadRotation(this, ref result);
 			return result;
 		}
 
@@ -1891,6 +_,7 @@
 			{
 				result = SpriteEffects.FlipHorizontally;
 			}
+			NPCLoader.BossHeadSpriteEffects(this, ref result);
 			return result;
 		}
 
@@ -3086,7 +_,7 @@
 			}
 			else if (Name != "")
 			{
-				for (int i = 1; i < 540; i++)
+				for (int i = 1; i < NPCLoader.NPCCount; i++)
 				{
 					if (Main.npcName[i] == Name)
 					{
@@ -3109,6 +_,17 @@
 			{
 				this.scaleStats();
 			}
+		}
+
+		public void CloneDefaults(int Type)
+		{
+			int originalType = this.type;
+			int originalNetID = this.netID;
+			ModNPC originalModEntity = this.modNPC;
+			this.SetDefaultsKeepPlayerInteraction(Type);
+			this.type = originalType;
+			this.netID = originalNetID;
+			this.modNPC = originalModEntity;
 		}
 
 		public void SetDefaultsKeepPlayerInteraction(int Type)
@@ -3127,6 +_,7 @@
 
 		public void SetDefaults(int Type, float scaleOverride = -1f)
 		{
+			this.modNPC = null;
 			this.takenDamageMultiplier = 1f;
 			this.extraValue = 0f;
 			for (int i = 0; i < this.playerInteraction.Length; i++)
@@ -3164,7 +_,11 @@
 				this.buffTime[k] = 0;
 				this.buffType[k] = 0;
 			}
-			for (int l = 0; l < 191; l++)
+			if (buffImmune.Length != BuffLoader.BuffCount)
+			{
+				Array.Resize(ref buffImmune, BuffLoader.BuffCount);
+			}
+			for (int l = 0; l < BuffLoader.BuffCount; l++)
 			{
 				this.buffImmune[l] = false;
 			}
@@ -11532,9 +_,11 @@
 				this.catchItem = 3564;
 				this.rarity = 3;
 			}
+			this.displayName = Lang.npcName(this.type, false);
+			NPCLoader.SetupNPC(this);
 			if (flag)
 			{
-				for (int num2 = 0; num2 < 191; num2++)
+				for (int num2 = 0; num2 < BuffLoader.BuffCount; num2++)
 				{
 					this.buffImmune[num2] = true;
 				}
@@ -11584,7 +_,6 @@
 			this.defDamage = this.damage;
 			this.defDefense = this.defense;
 			this.netID = this.type;
-			this.displayName = Lang.npcName(this.netID, false);
 			if (Main.expertMode)
 			{
 				this.scaleStats();
@@ -11895,12 +_,18 @@
 					this.damage = (int)((double)this.damage * 0.75);
 					break;
 			}
+			NPCLoader.ScaleExpertStats(this, num4, num5);
 			this.defDefense = this.defense;
 			this.defDamage = this.damage;
 			this.life = this.lifeMax;
 		}
 
 		public void AI()
+		{
+			NPCLoader.NPCAI(this);
+		}
+
+		public void VanillaAI()
 		{
 			if (this.aiStyle == 0)
 			{
@@ -16744,7 +_,7 @@
 								}
 								else
 								{
-									if (Main.tile[num210, num211 - 1].type == 10)
+									if (TileLoader.OpenDoorID(Main.tile[num210, num211 - 1]) >= 0)
 									{
 										bool flag26 = WorldGen.OpenDoor(num210, num211 - 1, this.direction);
 										if (!flag26)
@@ -19507,6 +_,7 @@
 						num378 += 0.15f;
 						this.defense += 8;
 					}
+					NPCLoader.BuffTownNPC(ref num378, ref this.defense);
 				}
 				if (this.type == 142 && Main.netMode != 1 && !Main.xMas)
 				{
@@ -19579,7 +_,7 @@
 				{
 					NPC.savedStylist = true;
 				}
-				if (this.type >= 0 && this.type < 540 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
+				if (this.type >= 0 && NPCID.Sets.TownCritter[this.type] && this.target == 255)
 				{
 					this.TargetClosest(true);
 					if (this.position.X < Main.player[this.target].position.X)
@@ -19765,7 +_,13 @@
 				{
 					for (int num392 = 0; num392 < 200; num392++)
 					{
-						if (Main.npc[num392].active && !Main.npc[num392].friendly && Main.npc[num392].damage > 0 && Main.npc[num392].Distance(base.Center) < num386 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num392].netID)))
+						bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num392], this);
+						if (modCanHit.HasValue && !modCanHit.Value)
+						{
+							continue;
+						}
+						bool canHitVal = modCanHit.HasValue && modCanHit.Value;
+						if (Main.npc[num392].active && !Main.npc[num392].friendly && Main.npc[num392].damage > 0 && Main.npc[num392].Distance(base.Center) < num386 && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num392].netID) || canHitVal))
 						{
 							flag43 = true;
 							float num393 = Main.npc[num392].Center.X - base.Center.X;
@@ -20010,7 +_,7 @@
 						if (this.closeDoor && ((this.position.X + (float)(this.width / 2)) / 16f > (float)(this.doorX + 2) || (this.position.X + (float)(this.width / 2)) / 16f < (float)(this.doorX - 2)))
 						{
 							Tile tileSafely = Framing.GetTileSafely(this.doorX, this.doorY);
-							if (tileSafely.type == 11)
+							if (TileLoader.CloseDoorID(tileSafely) >= 0)
 							{
 								bool flag47 = WorldGen.CloseDoor(this.doorX, this.doorY, false);
 								if (flag47)
@@ -20183,7 +_,7 @@
 							Tile tileSafely3 = Framing.GetTileSafely(num398, num399);
 							Tile tileSafely4 = Framing.GetTileSafely(num398, num399 - 1);
 							Tile tileSafely5 = Framing.GetTileSafely(num398, num399 - 2);
-							if (this.townNPC && tileSafely5.nactive() && (tileSafely5.type == 10 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
+							if (this.townNPC && tileSafely5.nactive() && (TileLoader.OpenDoorID(tileSafely5) >= 0 || tileSafely5.type == 388) && (Main.rand.Next(10) == 0 || flag38))
 							{
 								if (Main.netMode != 1)
 								{
@@ -20526,6 +_,10 @@
 						knockBack = 2f;
 						num409 = 10f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num406, ref knockBack);
+					NPCLoader.TownNPCAttackCooldown(this, ref num408, ref maxValue3);
+					NPCLoader.TownNPCAttackProj(this, ref num405, ref num407);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor7, ref num409, ref num411);
 					if (Main.expertMode)
 					{
 						num406 = (int)((float)num406 * Main.expertNPCDamage);
@@ -20585,7 +_,7 @@
 					int num416 = 0;
 					int maxValue4 = 0;
 					float knockBack2 = 0f;
-					int num417 = 0;
+					float num417 = 0;
 					bool flag53 = false;
 					float num418 = 0f;
 					if ((float)NPCID.Sets.AttackTime[this.type] == this.ai[1])
@@ -20815,6 +_,11 @@
 							num418 = 0.1f;
 						}
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num414, ref knockBack2);
+					NPCLoader.TownNPCAttackCooldown(this, ref num416, ref maxValue4);
+					NPCLoader.TownNPCAttackProj(this, ref num413, ref num415);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor8, ref num417, ref num418);
+					NPCLoader.TownNPCAttackShoot(this, ref flag53);
 					if (Main.expertMode)
 					{
 						num414 = (int)((float)num414 * Main.expertNPCDamage);
@@ -20965,6 +_,11 @@
 						maxValue5 = 1;
 						knockBack3 = 3f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num424, ref knockBack3);
+					NPCLoader.TownNPCAttackCooldown(this, ref num426, ref maxValue5);
+					NPCLoader.TownNPCAttackProj(this, ref num423, ref num425);
+					NPCLoader.TownNPCAttackProjSpeed(this, ref scaleFactor9, ref num427, ref num430);
+					NPCLoader.TownNPCAttackMagic(this, ref num429);
 					if (Main.expertMode)
 					{
 						num424 = (int)((float)num424 * Main.expertNPCDamage);
@@ -21094,6 +_,9 @@
 						maxValue6 = 8;
 						num441 = 5f;
 					}
+					NPCLoader.TownNPCAttackStrength(this, ref num440, ref num441);
+					NPCLoader.TownNPCAttackCooldown(this, ref num439, ref maxValue6);
+					NPCLoader.TownNPCAttackSwing(this, ref num442, ref num443);
 					if (Main.expertMode)
 					{
 						num440 = (int)((float)num440 * Main.expertNPCDamage);
@@ -45054,6 +_,11 @@
 				}
 				num = Main.npcTexture[this.type].Height / Main.npcFrameCount[this.type];
 			}
+			NPCLoader.FindFrame(this, num);
+		}
+
+		public void VanillaFindFrame(int num)
+		{
 			int num2 = 0;
 			if (this.aiAction == 0)
 			{
@@ -52669,6 +_,11 @@
 		}
 
 		public void TargetClosest(bool faceTarget = true)
+		{
+			NPCLoader.NPCTargetClosest(this, faceTarget);
+		}
+
+		public void VanillaTargetClosest(bool faceTarget = true)
 		{
 			float num = 0f;
 			float num2 = 0f;
@@ -52922,6 +_,10 @@
 				}
 				return;
 				IL_1E6:
+				if (!NPCLoader.CheckActive(this))
+				{
+					return;
+				}
 				if (this.townNPC || this.type == 453)
 				{
 					Rectangle rectangle = new Rectangle((int)(this.position.X + (float)(this.width / 2) - (float)NPC.townRangeX), (int)(this.position.Y + (float)(this.height / 2) - (float)NPC.townRangeY), NPC.townRangeX * 2, NPC.townRangeY * 2);
@@ -53123,6 +_,10 @@
 					this.life = this.lifeMax;
 					this.dontTakeDamage = true;
 					this.netUpdate = true;
+					return;
+				}
+				if (!NPCLoader.CheckDead(this))
+				{
 					return;
 				}
 				NPC.noSpawnCycle = true;
@@ -53791,7 +_,7 @@
 
 		public static void ResetKillCount()
 		{
-			for (int i = 0; i < 540; i++)
+			for (int i = 0; i < NPC.killCount.Length; i++)
 			{
 				NPC.killCount[i] = 0;
 			}
@@ -53821,7 +_,7 @@
 
 		public void NPCLoot()
 		{
-			if (Main.netMode == 1 || this.type >= 540)
+			if (Main.netMode == 1)
 			{
 				return;
 			}
@@ -53927,6 +_,10 @@
 					{
 						num6 = 2897 + num3 - 88;
 					}
+					if (num3 >= NPCID.Count)
+					{
+						num6 = NPCLoader.GetNPC(num3).bannerItem;
+					}
 					Vector2 position = this.position;
 					if (num5 >= 0 && num5 < 255)
 					{
@@ -53936,6 +_,10 @@
 				}
 			}
 			if (this.type == 23 && Main.hardMode)
+			{
+				return;
+			}
+			if (!NPCLoader.PreNPCLoot(this))
 			{
 				return;
 			}
@@ -57070,6 +_,7 @@
 				{
 					num70 = 499;
 				}
+				NPCLoader.BossLoot(this, ref name, ref num70);
 				Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, num70, stack5, false, 0, false, false);
 				int num71 = Main.rand.Next(5) + 5;
 				for (int num72 = 0; num72 < num71; num72++)
@@ -57140,6 +_,7 @@
 					NetMessage.SendData(25, -1, -1, Lang.misc[32], 255, 50f, 255f, 130f, 0, 0, 0);
 				}
 			}
+			NPCLoader.NPCLoot(this);
 			if (this.type != 16 && this.type != 81 && this.type != 121 && Main.rand.Next(6) == 0 && this.lifeMax > 1 && this.damage > 0)
 			{
 				int num73 = (int)Player.FindClosest(this.position, this.width, this.height);
@@ -57334,6 +_,7 @@
 			{
 				num = 3332;
 			}
+			NPCLoader.BossBag(this, ref num);
 			if (num > 0)
 			{
 				if (Main.netMode == 2)
@@ -57913,6 +_,7 @@
 							NPC.maxSpawns = (int)((double)((float)NPC.maxSpawns) * 0.6);
 						}
 					}
+					NPCLoader.EditSpawnRate(Main.player[j], ref NPC.spawnRate, ref NPC.maxSpawns);
 					int num6 = (int)(Main.player[j].position.X + (float)(Main.player[j].width / 2)) / 16;
 					int num7 = (int)(Main.player[j].position.Y + (float)(Main.player[j].height / 2)) / 16;
 					if (Main.wallHouse[(int)Main.tile[num6, num7].wall])
@@ -57954,6 +_,8 @@
 							NPC.safeRangeX += (int)((double)(NPC.sWidth / 16) * 0.5 / (double)num8);
 							NPC.safeRangeY += (int)((double)(NPC.sHeight / 16) * 0.5 / (double)num8);
 						}
+						NPCLoader.EditSpawnRange(Main.player[j], ref NPC.spawnRangeX, ref NPC.spawnRangeY,
+							ref NPC.safeRangeX, ref NPC.safeRangeY);
 						int num9 = (int)(Main.player[j].position.X / 16f) - NPC.spawnRangeX;
 						int num10 = (int)(Main.player[j].position.X / 16f) + NPC.spawnRangeX;
 						int num11 = (int)(Main.player[j].position.Y / 16f) - NPC.spawnRangeY;
@@ -58104,6 +_,7 @@
 							}
 						}
 					}
+					NPCSpawnInfo spawnInfo = new NPCSpawnInfo();
 					if (flag13)
 					{
 						if (Main.player[j].ZoneDungeon && (!Main.tileDungeon[(int)Main.tile[num, num2].type] || Main.tile[num, num2 - 1].wall == 0))
@@ -58208,6 +_,8 @@
 								}
 							}
 						}
+						spawnInfo.playerFloorX = num25;
+						spawnInfo.playerFloorY = num26;
 					}
 					if (flag6)
 					{
@@ -58273,8 +_,33 @@
 								}
 							}
 						}
+						spawnInfo.spawnTileX = num;
+						spawnInfo.spawnTileY = num2;
+						spawnInfo.player = Main.player[j];
+						spawnInfo.sky = flag;
+						spawnInfo.lihzahrd = flag2;
+						spawnInfo.playerSafe = flag3;
+						spawnInfo.invasion = flag4;
+						spawnInfo.water = flag5;
+						spawnInfo.granite = flag7;
+						spawnInfo.marble = flag8;
+						spawnInfo.spiderCave = flag9;
+						spawnInfo.playerInTown = flag10;
+						spawnInfo.desertCave = flag11;
+						spawnInfo.planteraDefeated = flag12;
+						spawnInfo.safeRangeX = flag14;
 						int num45 = (int)Main.tile[num, num2].type;
 						int num46 = 200;
+						int? spawnChoice = NPCLoader.ChooseSpawn(spawnInfo);
+						if (!spawnChoice.HasValue)
+						{
+							return;
+						}
+						int spawn = spawnChoice.Value;
+						if (spawn != 0)
+						{
+							goto endVanillaSpawn;
+						}
 						if (Main.player[j].ZoneTowerNebula)
 						{
 							bool flag15 = true;
@@ -61233,6 +_,11 @@
 						{
 							num46 = NPC.NewNPC(num * 16 + 8, num2 * 16, 49, 0, 0f, 0f, 0f, 0f, 255);
 						}
+						endVanillaSpawn: //this ugly code is just to minimize the diff file
+						if (spawn != 0)
+						{
+							num46 = NPCLoader.SpawnNPC(spawn, num, num2);
+						}
 						if (Main.npc[num46].type == 1 && Main.rand.Next(180) == 0)
 						{
 							Main.npc[num46].SetDefaults("Pinky");
@@ -62021,14 +_,17 @@
 			{
 				num2 = 0;
 			}
-			num = Main.CalculateDamage((int)num, num2);
-			if (crit)
-			{
-				num *= 2.0;
-			}
-			if (this.takenDamageMultiplier > 1f)
-			{
-				num *= (double)this.takenDamageMultiplier;
+			if (NPCLoader.StrikeNPC(this, ref num, num2, ref knockBack, hitDirection, ref crit))
+			{
+				num = Main.CalculateDamage((int)num, num2);
+				if (crit)
+				{
+					num *= 2.0;
+				}
+				if (this.takenDamageMultiplier > 1f)
+				{
+					num *= (double)this.takenDamageMultiplier;
+				}
 			}
 			if ((this.takenDamageMultiplier > 1f || Damage != 9999) && this.lifeMax > 1)
 			{
@@ -62278,6 +_,11 @@
 		}
 
 		public void HitEffect(int hitDirection = 0, double dmg = 10.0)
+		{
+			NPCLoader.HitEffect(this, hitDirection, dmg);
+		}
+
+		public void VanillaHitEffect(int hitDirection = 0, double dmg = 10.0)
 		{
 			if (!this.active)
 			{
@@ -69335,7 +_,10 @@
 			{
 				if (this.buffType[i] == type)
 				{
-					if (this.buffTime[i] < time)
+					if (BuffLoader.ReApply(type, this, time, i))
+					{
+					}
+					else if (this.buffTime[i] < time)
 					{
 						this.buffTime[i] = time;
 					}
@@ -69825,6 +_,7 @@
 				this.javelined = false;
 				this.celled = false;
 				this.dryadBane = false;
+				NPCLoader.ResetEffects(this);
 				for (int k = 0; k < 5; k++)
 				{
 					if (this.buffType[k] > 0 && this.buffTime[k] > 0)
@@ -69906,6 +_,7 @@
 						{
 							this.daybreak = true;
 						}
+						BuffLoader.Update(this.buffType[k], this, ref k);
 					}
 				}
 				if (this.soulDrain)
@@ -70151,6 +_,7 @@
 							num19 = 5;
 						}
 					}
+					NPCLoader.UpdateLifeRegen(this, ref num19);
 					if (this.lifeRegen <= -240 && num19 < 2)
 					{
 						num19 = 2;
@@ -70456,22 +_,30 @@
 							if (Main.npc[num39].active && !Main.npc[num39].friendly && Main.npc[num39].damage > 0)
 							{
 								Rectangle rectangle2 = new Rectangle((int)Main.npc[num39].position.X, (int)Main.npc[num39].position.Y, Main.npc[num39].width, Main.npc[num39].height);
-								if (rectangle.Intersects(rectangle2) && (this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
+								bool? modCanHit = NPCLoader.CanHitNPC(Main.npc[num39], this);
+								if (modCanHit.HasValue && !modCanHit.Value)
+								{
+									continue;
+								}
+								if (rectangle.Intersects(rectangle2) && ((modCanHit.HasValue && modCanHit.Value) || this.type != 453 || !NPCID.Sets.Skeletons.Contains(Main.npc[num39].netID)))
 								{
 									int num40 = Main.npc[num39].damage;
-									int num41 = 6;
+									float num41 = 6;
 									int num42 = 1;
 									if (Main.npc[num39].position.X + (float)(Main.npc[num39].width / 2) > this.position.X + (float)(this.width / 2))
 									{
 										num42 = -1;
 									}
+									bool crit = false;
+									NPCLoader.ModifyHitNPC(Main.npc[num39], this, ref num40, ref num41, ref crit);
 									double num43 = Main.npc[i].StrikeNPCNoInteraction(num40, (float)num41, num42, false, false, false);
 									if (Main.netMode != 0)
 									{
-										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, 0, 0, 0);
+										NetMessage.SendData(28, -1, -1, "", i, (float)num40, (float)num41, (float)num42, crit ? 1 : 0, 0, 0);
 									}
 									this.netUpdate = true;
 									this.immune[255] = 30;
+									NPCLoader.OnHitNPC(Main.npc[num39], this, (int)num43, num41, crit);
 									if (this.dryadWard)
 									{
 										num40 = (int)num43 / 3;
@@ -71280,6 +_,11 @@
 
 		public Color GetAlpha(Color newColor)
 		{
+			Color? modColor = NPCLoader.GetAlpha(this, newColor);
+			if (modColor.HasValue)
+			{
+				return modColor.Value;
+			}
 			float num = (float)(255 - this.alpha) / 255f;
 			int num2 = (int)((float)newColor.R * num);
 			int num3 = (int)((float)newColor.G * num);
@@ -72932,6 +_,7 @@
 					result = Lang.dialog(Main.rand.Next(364, 370), false);
 				}
 			}
+			NPCLoader.GetChat(this, ref result);
 			return result;
 		}
 

