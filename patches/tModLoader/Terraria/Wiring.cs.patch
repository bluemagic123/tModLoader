--- src/Terraria\Terraria\Wiring.cs
+++ src/tModLoader\Terraria\Wiring.cs
@@ -6,6 +_,7 @@
 using Terraria.GameContent.UI;
 using Terraria.ID;
 using Terraria.Localization;
+using Terraria.ModLoader;
 
 namespace Terraria
 {
@@ -16,26 +_,26 @@
 		public static bool blockPlayerTeleportationForOneIteration;
 		public static bool running;
 		private static Dictionary<Point16, bool> _wireSkip;
-		private static DoubleStack<Point16> _wireList;
-		private static DoubleStack<byte> _wireDirectionList;
-		private static Dictionary<Point16, byte> _toProcess;
+		public static DoubleStack<Point16> _wireList;
+		public static DoubleStack<byte> _wireDirectionList;
+		public static Dictionary<Point16, byte> _toProcess;
 		private static Queue<Point16> _GatesCurrent;
-		private static Queue<Point16> _LampsToCheck;
-		private static Queue<Point16> _GatesNext;
+		public static Queue<Point16> _LampsToCheck;
+		public static Queue<Point16> _GatesNext;
 		private static Dictionary<Point16, bool> _GatesDone;
 		private static Dictionary<Point16, byte> _PixelBoxTriggers;
-		private static Vector2[] _teleport;
-		private static int[] _inPumpX;
-		private static int[] _inPumpY;
-		private static int _numInPump;
-		private static int[] _outPumpX;
-		private static int[] _outPumpY;
-		private static int _numOutPump;
+		public static Vector2[] _teleport;
+		public static int[] _inPumpX;
+		public static int[] _inPumpY;
+		public static int _numInPump;
+		public static int[] _outPumpX;
+		public static int[] _outPumpY;
+		public static int _numOutPump;
 		private static int[] _mechX;
 		private static int[] _mechY;
 		private static int _numMechs;
 		private static int[] _mechTime;
-		private static int _currentWireColor;
+		public static int _currentWireColor;
 		private static int CurrentUser = 254;
 
 		public static void SetCurrentUser(int plr = -1)
@@ -339,7 +_,7 @@
 			}
 		}
 
-		private static bool CheckMech(int i, int j, int time)
+		public static bool CheckMech(int i, int j, int time)
 		{
 			for (int k = 0; k < Wiring._numMechs; k++)
 			{
@@ -413,7 +_,7 @@
 			}
 		}
 
-		private static void TripWire(int left, int top, int width, int height)
+		public static void TripWire(int left, int top, int width, int height)
 		{
 			if (Main.netMode == 1)
 			{
@@ -917,6 +_,10 @@
 			}
 			if (tile.active())
 			{
+				if (!TileLoader.PreHitWire(i, j, type))
+				{
+					return;
+				}
 				if (type == 144)
 				{
 					Wiring.HitSwitch(i, j);
@@ -1341,7 +_,7 @@
 									NetMessage.SendData(19, -1, -1, null, 4 + flag4.ToInt(), (float)i, (float)j, 0f, 0, 0, 0);
 									return;
 								}
-								if (type == 11)
+								if (TileLoader.CloseDoorID(Main.tile[i, j]) >= 0)
 								{
 									if (WorldGen.CloseDoor(i, j, true))
 									{
@@ -1349,7 +_,7 @@
 										return;
 									}
 								}
-								else if (type == 10)
+								else if (TileLoader.OpenDoorID(Main.tile[i, j]) >= 0)
 								{
 									int num69 = 1;
 									if (Main.rand.Next(2) == 0)
@@ -1447,7 +_,7 @@
 									}
 									else
 									{
-										if (type == 4)
+										if (TileLoader.IsTorch(type))
 										{
 											if (tile.frameX < 66)
 											{
@@ -2010,7 +_,7 @@
 											}
 											else
 											{
-												if (type == 139 || type == 35)
+												if (type == 139 || type == 35 || TileLoader.IsModMusicBox(tile))
 												{
 													WorldGen.SwitchMB(i, j);
 													return;
@@ -2414,18 +_,15 @@
 														{
 															if (Wiring.CheckMech(num131, num130, 300))
 															{
-																int[] array = new int[10];
+																List<int> array = new List<int>();
 																int num139 = 0;
 																for (int num140 = 0; num140 < 200; num140++)
 																{
-																	if (Main.npc[num140].active && (Main.npc[num140].type == 17 || Main.npc[num140].type == 19 || Main.npc[num140].type == 22 || Main.npc[num140].type == 38 || Main.npc[num140].type == 54 || Main.npc[num140].type == 107 || Main.npc[num140].type == 108 || Main.npc[num140].type == 142 || Main.npc[num140].type == 160 || Main.npc[num140].type == 207 || Main.npc[num140].type == 209 || Main.npc[num140].type == 227 || Main.npc[num140].type == 228 || Main.npc[num140].type == 229 || Main.npc[num140].type == 358 || Main.npc[num140].type == 369 || Main.npc[num140].type == 550))
+																	bool vanillaCanGo = Main.npc[num140].type == 17 || Main.npc[num140].type == 19 || Main.npc[num140].type == 22 || Main.npc[num140].type == 38 || Main.npc[num140].type == 54 || Main.npc[num140].type == 107 || Main.npc[num140].type == 108 || Main.npc[num140].type == 142 || Main.npc[num140].type == 160 || Main.npc[num140].type == 207 || Main.npc[num140].type == 209 || Main.npc[num140].type == 227 || Main.npc[num140].type == 228 || Main.npc[num140].type == 229 || Main.npc[num140].type == 358 || Main.npc[num140].type == 369 || Main.npc[num140].type == 550;
+																	if (Main.npc[num140].active && NPCLoader.CanGoToStatue(Main.npc[num140], true, vanillaCanGo))
 																	{
-																		array[num139] = num140;
+																		array.Add(num140);
 																		num139++;
-																		if (num139 >= 9)
-																		{
-																			break;
-																		}
 																	}
 																}
 																if (num139 > 0)
@@ -2434,23 +_,21 @@
 																	Main.npc[num141].position.X = (float)(num133 - Main.npc[num141].width / 2);
 																	Main.npc[num141].position.Y = (float)(num134 - Main.npc[num141].height - 1);
 																	NetMessage.SendData(23, -1, -1, null, num141, 0f, 0f, 0f, 0, 0, 0);
+																	NPCLoader.OnGoToStatue(Main.npc[num141], true);
 																}
 															}
 														}
 														else if (num132 == 41 && Wiring.CheckMech(num131, num130, 300))
 														{
-															int[] array2 = new int[10];
+															List<int> array2 = new List<int>();
 															int num142 = 0;
 															for (int num143 = 0; num143 < 200; num143++)
 															{
-																if (Main.npc[num143].active && (Main.npc[num143].type == 18 || Main.npc[num143].type == 20 || Main.npc[num143].type == 124 || Main.npc[num143].type == 178 || Main.npc[num143].type == 208 || Main.npc[num143].type == 353))
+																bool vanillaCanGo = Main.npc[num143].type == 18 || Main.npc[num143].type == 20 || Main.npc[num143].type == 124 || Main.npc[num143].type == 178 || Main.npc[num143].type == 208 || Main.npc[num143].type == 353;
+																if (Main.npc[num143].active && NPCLoader.CanGoToStatue(Main.npc[num143], false, vanillaCanGo))
 																{
-																	array2[num142] = num143;
+																	array2.Add(num143);
 																	num142++;
-																	if (num142 >= 9)
-																	{
-																		break;
-																	}
 																}
 															}
 															if (num142 > 0)
@@ -2459,6 +_,7 @@
 																Main.npc[num144].position.X = (float)(num133 - Main.npc[num144].width / 2);
 																Main.npc[num144].position.Y = (float)(num134 - Main.npc[num144].height - 1);
 																NetMessage.SendData(23, -1, -1, null, num144, 0f, 0f, 0f, 0, 0, 0);
+																NPCLoader.OnGoToStatue(Main.npc[num144], false);
 															}
 														}
 													}
@@ -2515,6 +_,7 @@
 						}
 					}
 				}
+				TileLoader.HitWire(i, j, type);
 			}
 		}
 
@@ -2583,7 +_,7 @@
 			}
 		}
 
-		private static void DeActive(int i, int j)
+		public static void DeActive(int i, int j)
 		{
 			if (!Main.tile[i, j].active())
 			{
@@ -2622,7 +_,7 @@
 			}
 		}
 
-		private static void ReActive(int i, int j)
+		public static void ReActive(int i, int j)
 		{
 			Main.tile[i, j].inActive(false);
 			WorldGen.SquareTileFrame(i, j, false);

